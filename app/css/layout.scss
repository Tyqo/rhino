@use "sass:map";
// Load Settings
@use "settings" as *;

// Get lib before custom
@use "lib" as *;
@use "theme/light" as *;
@use "theme/measurements" as *;

@forward "components/media-select";

$spacing: 1rem;
$border-radius: 0.5rem;
$border-width: 4px;

.layout-menu {
	background-color: grey;
	position: fixed;
	top: 0;
	left: 50%;
	transform: translateX(-50%);
	z-index: 2000;
	width: fit-content;
	box-sizing: border-box;
	border-bottom-left-radius: $border-radius;
	border-bottom-right-radius: $border-radius;
	overflow: hidden;
	display: flex;
	gap: var(--spacing, $spacing);
	align-items: center;

	padding: 0;
	padding-right: 1rem;

	p {
		padding: 0;
		margin: 0;
	}

	a:not(.layout-button) {
		color: color('primary', 400);
	}

	.layout-button {
		padding-block: 0.25rem;
	}
}

.layout-container, .layout-element, .layout-slot {
	width: 100%;
	position: relative;
}

.layout-element {
	position: relative;
	border: solid $border-width transparent;
	transition: 150ms border-color;

	&:hover {
		border: solid $border-width color('primary', 400);

		.layout-handle {
			opacity: 1;
		}

		.select-media {
			opacity: 1;
		}
	}

	.ce-block__content,
	.ce-toolbar__content {
		max-width: 100%;
	}
}

.layout-slot {
	background: #f6f6f6;
	color: #333;
	border-radius: $border-radius;
	padding: $spacing $spacing $spacing $spacing * 4;
}

.layout-handle {
	opacity: 0;
	position: absolute;
	z-index: 1000;
	top: 0;
	right: 1rem;
	left: 1rem;
	transition: 150ms opacity;
	display: flex;
	gap: 2rem;
	justify-content: space-between;
	pointer-events: none;

	& > * {
		pointer-events: all;
	}

	&__actions {
		:first-child {
			border-bottom-left-radius: $border-radius;
		}

		:last-child {
			border-bottom-right-radius: $border-radius;
		}
	}
}

.layout-button {
	@include light;
	@include measurements;

	display: inline-flex;
	background-color: color('primary', 400);
	color: $white;
	font-weight: 800;
	text-decoration: none;
	border: none;
	padding: 0.5rem 1rem;
	cursor: pointer;

	&:focus,
	&:hover {
		background-color: color('primary', 500);
	}

	&[name=new-component] {
		position: absolute;
		z-index: 1200;
		bottom: $border-width;
		left: 50%;
		transform: translate(-50%, 100%);
		border-radius: 0;
		border-bottom-left-radius: $border-radius;
		border-bottom-right-radius: $border-radius;
	}

	svg {
		// ToDo: Check Webcomponents or CSS Layers
		height: 1.2rem;
		width: auto;
		vertical-align: middle;
	}
}

.rhino-select {
	@include light;
	@include measurements;

	display: inline-block;
	color: color("neutral", 700);
	// background-color: $white;
	font-weight: 600;
	appearance: none;
	padding-right: 2rem;
	padding-left: 0.5rem;
	padding-block: 0rem;
	text-decoration: none;
	margin-top: $border-width * -1;
	border: color('primary', 400) solid $border-width;
	border-radius: 0 0 $border-radius $border-radius;
	cursor: pointer;

	--icon-chevron: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='#{to-rgb(color("neutral", 700))}' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
	background-image: var(--icon-chevron);
	background-position: center right 0.75rem;
	background-size: 1rem auto;
	background-repeat: no-repeat;
}

.select-media {
	opacity: 0;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

dialog {
	@include light;
	@include measurements;
	width: 100%;
	max-width: 52rem;
	margin: auto;
	border: none;
	// padding: var(--typography-spacing-vertical);

	@include for-size(sm-up) {
		width: calc(100% - (var(--outer-bound) * 2));
	}

	&::backdrop {
		--modal-overlay-background-color: rgba(0, 0, 0, 0.2);
		background-color: var(--modal-overlay-background-color);

		--modal-overlay-backdrop-filter: blur(0.25rem);
		-webkit-backdrop-filter: var(--modal-overlay-backdrop-filter);
		backdrop-filter: var(--modal-overlay-backdrop-filter);
	}

	.close,
	[aria-label="close"] {
		position: sticky;
		display: block;

		right: 0;
		margin-left: auto;
		top: 0;

		width: 1rem;
		height: 1rem;
		background-image: var(--icon-close);
		background-position: center;
		background-size: auto 1rem;
		background-repeat: no-repeat;
		opacity: .5;

		padding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);
		margin-bottom: var(--spacing);
		--background-color: transparent;
		background-color: var(--background-color);
		--border-color: var(--contrast);
		border: var(--border-width) solid var(--border-color);

		&:focus, &:hover {
			--box-shadow: var(--button-hover-box-shadow, 0 0 0 rgba(0, 0, 0, 0)), 0 0 0 var(--outline-width) var(--contrast-focus);
			--border-color: var(--contrast-hover);
			--color: var(--contrast-hover);
			--background-color: transparent;
			box-shadow: var(--box-shadow);
		}
	}

	&>article {
		// margin: calc(var(--typography-spacing-vertical) * -1);
		padding: var(--block-spacing-vertical) var(--block-spacing-horizontal);
		border-radius: var(--border-radius);
		background: var(--card-background-color);
		box-shadow: var(--card-box-shadow);

		&>footer {
			border-top: var(--border-width) solid var(--card-border-color);
			border-bottom-right-radius: var(--border-radius);
			border-bottom-left-radius: var(--border-radius);

			border-top: var(--border-width) solid var(--card-border-color);
			border-bottom-right-radius: var(--border-radius);
			border-bottom-left-radius: var(--border-radius);

			padding: calc(var(--block-spacing-vertical) * 0.66) var(--block-spacing-horizontal);
			background-color: var(--card-sectionning-background-color);

			margin-top: var(--block-spacing-vertical);
			margin-bottom: calc(var(--block-spacing-vertical) * -1);
			margin-right: calc(var(--block-spacing-horizontal) * -1);
			margin-left: calc(var(--block-spacing-horizontal) * -1);

			@include cluster($spacing * 0.5);
			justify-content: flex-end;
		}


		main {
			min-height: 12rem;
			--border-color: var(--muted-color);
			border: var(--border-width) solid var(--border-color);
			border-radius: var(--border-radius);
			padding: var(--spacing) var(--form-element-spacing-horizontal);
		}
	}

	button {
		@extend .layout-button;
	}
}

.editor {
	background: #f6f6f6;
	color: #333;
	border-radius: $border-radius;
	padding: $spacing $spacing $spacing $spacing * 4;
}