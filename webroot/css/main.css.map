{"version":3,"sources":["main.css","shapes/lib/reset.scss","settings.scss","shapes/lib/classes.scss","shapes/lib/media-object.scss","shapes/lib/type-setting.scss","shapes/lib/rwd.scss","shapes/lib/utils.scss","shapes/lib/button.scss","shapes/lib/stack.scss","shapes/lib/center.scss","shapes/lib/cluster.scss","shapes.scss","partials/typography.scss","partials/common.scss","shapes/lib/box.scss","shapes/lib/icon.scss","partials/input.scss","partials/header.scss","partials/footer.scss","partials/layout-mode.scss","shapes/layout-options/element-margin.scss","shapes/layout-options/element-size.scss","shapes/components/loading-screen.scss","components/_index.scss","shapes/components/nav.scss","shapes/components/overlay.scss","shapes/components/flash-message.scss","shapes/components/hero.scss","shapes/components/media-object.scss","shapes/components/quote.scss","shapes/components/slider.scss","shapes/components/tile.scss","shapes/components/expander.scss","shapes/components/card.scss","shapes/components/light-box.scss","shapes/components/map.scss","main.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["@charset \"UTF-8\";\n/**\n * home/jbraun/Sites/halma-kickstart/src/css/libhalma/_reset.scss\n *\n * inspired by https://hankchizljaw.com/wrote/a-modern-css-reset/\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n*, *::before, *::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\nbody {\n  min-height: 100vh;\n  line-height: 1.35;\n  text-rendering: optimizeSpeed;\n}\n\nmain {\n  text-rendering: optimizeLegibility;\n}\n\nimg, picture, video {\n  display: block;\n  max-width: 100%;\n  max-height: 100%;\n  height: auto;\n  object-fit: contain;\n}\n\nol, ul {\n  list-style: none;\n  counter-reset: li;\n}\nol > li, ul > li {\n  position: relative;\n  padding-left: 2ch;\n}\nol > li::before, ul > li::before {\n  position: absolute;\n  left: 0;\n}\n\nol > li::before {\n  content: counter(li) \".\";\n  counter-increment: li;\n}\n\nul > li::before {\n  content: var(--bullet-list-char, \"•\");\n}\n\ninput, button, textarea, select {\n  font: inherit;\n}\n\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  *, *::before, *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n/**\n * _settings.scss\n *\n * Use Sass variables and custom properties as appropriate, both are possible\n */\n/**********\n * Colors *\n **********/\n/********\n * Typo *\n ********/\n/************\n * Measures *\n ************/\n/********************\n * Options/Switches *\n ********************/\n/*****************\n *  Breakpoints  *\n *****************/\n/**\n * src/css/libhalma/_classes.scss\n *\n * Predefined utility classes\n *\n * @author C.Coull <c.coull@agentur-halma.de>\n * @author J. Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-27\n */\n/**\n * src/css/libhalma/media-object.scss\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-31\n */\n/**\n * src/css/libhalma/_vertical_rhythm.scss\n *\n * @author Carsten Coull <c.coull@agentur-halma.de>\n * @package libhalma\n */\nbody {\n  position: relative;\n}\n\n.debug-base-line-grid {\n  background-image: linear-gradient(to bottom, transparent 0, transparent calc(2rem), rgba(255, 99, 71, 0.1) calc(2rem), rgba(255, 99, 71, 0.1));\n  background-size: 100% 4rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none;\n  z-index: 32766;\n  top: -16px;\n}\n\n/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n/**\n * src/css/mixins/_utils.scss\n *\n * Utility mixins and functions\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n/**\n * strip-unit\n *\n * Returns the unitless number\n * From: https://css-tricks.com/snippets/sass/strip-unit-function/\n *\n * @param number\n * @return number\n */\n/**\n * pow\n *\n * Return the number risen to the power of n\n * From: https://css-tricks.com/snippets/sass/power-function/\n *\n * @param number \tThe operator\n * @param exp \t\tThe exponent\n * @return number\n */\n/**\n * Calculates the sRGB luma of a colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Math nicked from a great Thoughtbot article by Reda Lemeden:\n * http://robots.thoughtbot.com/closer-look-color-lightness\n */\n/*\n * Picks a colour from two options based on which one is more visible\n * on the given background colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Usage: color-for-bg($bg-color, $color-1, $color-2)\n */\n/*\n * @author Carsten Coull <c.coull@agentur-halma.de>\n *\n * Slope Utilits\n * sets a Graph to use for unit\n *\n * Needs a calc support\n */\n/*\n * for fluid type to fit to screen;\n */\n/*\n * Sets a fluid Unit between to Values\n *\n * $min-size: Minimum Value\n * $max-size: Maximum Value\n * $min-view: Size at which to use $min-size\n * $max-view: Size at which to use $max-size\n *\n * works best with px Unit\n */\n/* Can be used with Custom Proporties */\n/**\n * _ui.scss\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n/**\n * Reset button\n * See: https://fvsch.com/styling-buttons/\n */\n/**\n * The Stack\n *\n * Spacing for vertically stacked blocks\n */\n/**\n * From: EveryLayout\n */\n/**\n * The Cluster\n *\n * https://every-layout.dev/demos/cluster-ctas/\n *\n * We can use `gap` now on flexbox items, so it gets really easy now :-)\n */\n/**\n * src/css/libhalma/_libhalma.scss\n *\n * Libhalma: A simple, solid and accessible basic library for css\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n/**\n * src/css/partials/_typography.scss\n *\n * Typography related styles\n *\n */\n/************\n * Webfonts *\n ************/\n/**\n * @example\n *\n * @include font-face('FontName', '../fonts/FontName-Regular', normal, normal, $file-types: woff2);\n * @include font-face('FontName', '../fonts/FontName-Bold', bold, normal, $file-types: woff2);\n * @include font-face('FontName', '../fonts/FontName-Italic', normal, italic, $file-types: woff2);\n */\nhtml {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizeLegibility;\n  font-size: clamp(0.85rem, (100vw * 0.0035) - -0.78rem, 1.2rem);\n}\n\nbody {\n  font-size: 1rem;\n  line-height: 2em;\n  margin-bottom: 0rem;\n  color: var(--text-color);\n  font-family: \"Inter\", sans-serif;\n}\n\n.headline--big, h1 {\n  font-size: 1.8020324707rem;\n  line-height: 1.1098579146em;\n  margin-bottom: 0rem;\n  font-weight: 900;\n}\n\n.headline--default, h2 {\n  font-size: 1.6018066406rem;\n  line-height: 1.2485901539em;\n  margin-bottom: 0rem;\n  font-weight: 800;\n}\n\n.headline--small, h3 {\n  font-size: 1.265625rem;\n  line-height: 1.5802469136em;\n  margin-bottom: 0rem;\n}\n\n.headline, h1, h2, h3, h4, h5, h6 {\n  line-height: 1.2;\n  letter-spacing: -0.02em;\n  hyphens: auto;\n}\n@media (min-width: 900px) {\n  .headline, h1, h2, h3, h4, h5, h6 {\n    hyphens: manual;\n  }\n}\n\n.body-text h1, .body-text h2, .body-text h3, .body-text h4, .body-text h5, .body-text h6 {\n  margin-bottom: var(--vertical-unit);\n}\n.body-text p {\n  margin-bottom: 0;\n}\n\n.small {\n  font-size: 0.7901234568rem;\n  line-height: 2.53125em;\n  margin-bottom: 0rem;\n}\n\n/**\n* partials/_common.scss\n*\n* Common styles, like e.g. resets, basic styles...\n*/\n:root {\n  --primary-color: #ac3e3e;\n  --primary-color-200: #d17f7f;\n  --primary-color-300: #c35a5a;\n  --primary-color-400: #ac3e3e;\n  --primary-color-500: #873030;\n  --primary-color-600: #612323;\n  --primary-color-700: #3c1515;\n  --primary-color-800: #160808;\n  --primary-color-900: black;\n  --secondary-color: #5a74bd;\n  --secondary-color-200: #a3b1da;\n  --secondary-color-300: #7e93cc;\n  --secondary-color-400: #5a74bd;\n  --secondary-color-500: #415ba3;\n  --secondary-color-600: #33467e;\n  --secondary-color-700: #24325a;\n  --secondary-color-800: #151e36;\n  --secondary-color-900: black;\n  --background-color: #ae1717;\n  --background-color-200: #e64545;\n  --background-color-300: #db1d1d;\n  --background-color-400: #ae1717;\n  --background-color-500: #811111;\n  --background-color-600: #540b0b;\n  --background-color-700: #270505;\n  --background-color-800: black;\n  --background-color-900: black;\n  --contrast-color: #fff;\n  --contrast-color-200: white;\n  --contrast-color-300: white;\n  --contrast-color-400: #fff;\n  --contrast-color-500: #e6e6e6;\n  --contrast-color-600: #cccccc;\n  --contrast-color-700: #b3b3b3;\n  --contrast-color-800: #999999;\n  --contrast-color-900: #666666;\n  --text-color: #333;\n  --text-color-200: #666666;\n  --text-color-300: #4d4d4d;\n  --text-color-400: #333;\n  --text-color-500: #1a1a1a;\n  --text-color-600: black;\n  --text-color-700: black;\n  --text-color-800: black;\n  --text-color-900: black;\n  --margin-200: 0.5rem;\n  --margin-300: 1rem;\n  --margin-400: 2rem;\n  --margin-500: 4rem;\n  --margin-600: 6rem;\n  --margin-800: 9rem;\n  --margin-900: 12rem;\n  --border-width: 2px;\n  --border-radius: 4px;\n  --border-color: currentColor;\n  --border-type: solid;\n  --border: var(--border-color) var(--border-width) var(--border-type) var(--border-radius);\n  --gutter: 1rem;\n  --vertical-unit: 2rem;\n  --outer-bound: 2rem;\n  --inner-bound-width: 58rem;\n  --outer-bound-width: 78rem;\n  --header-height: clamp(5rem, (100vw * 0.0076923077) - -4.8461538462rem, 6.5rem);\n  --screen-height: 100vh;\n}\n\nhtml {\n  scroll-behavior: smooth;\n  scrollbar-color: var(--primary-color) var(--background-color);\n}\nhtml::-webkit-scrollbar {\n  width: 1rem;\n  height: 1rem;\n}\nhtml::-webkit-scrollbar-thumb {\n  background: var(--primary-color);\n}\nhtml::-webkit-scrollbar-track {\n  background: var(--background-color);\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n}\n\n.main-content {\n  flex: 1;\n  width: 100%;\n}\n.main-content h1 + .body-text, .main-content h2 + .body-text, .main-content h3 + .body-text, .main-content h4 + .body-text, .main-content h5 + .body-text, .main-content h6 + .body-text {\n  margin-top: var(--margin-200);\n}\n\n.main-content > * {\n  transition-duration: 750ms;\n  transition-timing-function: ease-out, linear;\n  transition-property: transform, opacity;\n}\n\nbody:not(.page-has-loaded):not(.cmt-layout) .main-content > * {\n  transform: translateY(20vh);\n  opacity: 0;\n}\n\n.margin--200 {\n  margin-bottom: var(--margin-200);\n}\n\n.margin-bottom--200 {\n  margin-bottom: var(--margin-200);\n}\n\n.margin-top--200 {\n  margin-top: var(--margin-200);\n}\n\n.gap--200 {\n  gap: var(--margin-200);\n}\n\n.margin--300 {\n  margin-bottom: var(--margin-300);\n}\n\n.margin-bottom--300 {\n  margin-bottom: var(--margin-300);\n}\n\n.margin-top--300 {\n  margin-top: var(--margin-300);\n}\n\n.gap--300 {\n  gap: var(--margin-300);\n}\n\n.margin--400 {\n  margin-bottom: var(--margin-400);\n}\n\n.margin-bottom--400 {\n  margin-bottom: var(--margin-400);\n}\n\n.margin-top--400 {\n  margin-top: var(--margin-400);\n}\n\n.gap--400 {\n  gap: var(--margin-400);\n}\n\n.margin--500 {\n  margin-bottom: var(--margin-500);\n}\n\n.margin-bottom--500 {\n  margin-bottom: var(--margin-500);\n}\n\n.margin-top--500 {\n  margin-top: var(--margin-500);\n}\n\n.gap--500 {\n  gap: var(--margin-500);\n}\n\n.margin--600 {\n  margin-bottom: var(--margin-600);\n}\n\n.margin-bottom--600 {\n  margin-bottom: var(--margin-600);\n}\n\n.margin-top--600 {\n  margin-top: var(--margin-600);\n}\n\n.gap--600 {\n  gap: var(--margin-600);\n}\n\n.margin--800 {\n  margin-bottom: var(--margin-800);\n}\n\n.margin-bottom--800 {\n  margin-bottom: var(--margin-800);\n}\n\n.margin-top--800 {\n  margin-top: var(--margin-800);\n}\n\n.gap--800 {\n  gap: var(--margin-800);\n}\n\n.margin--900 {\n  margin-bottom: var(--margin-900);\n}\n\n.margin-bottom--900 {\n  margin-bottom: var(--margin-900);\n}\n\n.margin-top--900 {\n  margin-top: var(--margin-900);\n}\n\n.gap--900 {\n  gap: var(--margin-900);\n}\n\n.box {\n  /* ↓ Padding set to the first point on the modular scale */\n  padding: 1rem;\n  border: 0 var(--primary-color) solid;\n  /* ↓ Always apply the transparent outline, for high contrast mode */\n  outline: 0 transparent;\n  outline-offset: calc(0 * -1);\n  color: var(--contrast-color);\n  background-color: var(--background-color);\n  border-radius: 0;\n}\n.box * {\n  /* ↓ Force colors to inherit from the parent\n  and honor inversion (below) */\n  color: inherit;\n}\n\n.box--inverted {\n  /* ↓ Padding set to the first point on the modular scale */\n  padding: 1rem;\n  border: 0 #ae1717 solid;\n  /* ↓ Always apply the transparent outline, for high contrast mode */\n  outline: 0 transparent;\n  outline-offset: calc(0 * -1);\n  color: #ae1717;\n  background-color: #5a74bd;\n  border-radius: 0;\n}\n.box--inverted * {\n  /* ↓ Force colors to inherit from the parent\n  and honor inversion (below) */\n  color: inherit;\n}\n\n.inverted {\n  --primary-color: #5a74bd;\n  --secondary-color: #ac3e3e;\n  --background-color: #fff;\n  --text-color: #ae1717;\n  --contrast-color: #333;\n}\n\n.cluster {\n  gap: 1rem;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.cluster-end {\n  justify-content: flex-end;\n}\n\n.center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.stack > * + * {\n  margin-top: var(--margin-400);\n}\n\n.icon {\n  display: inline-block;\n  height: 0.75em;\n  width: 0.75em;\n  /* ↓ Override the em value with `1cap`  where `cap` is supported */\n  height: 1cap;\n  width: 1cap;\n  overflow: visible;\n  vertical-align: -0.01em;\n}\n.icon svg {\n  fill: currentColor !important;\n  stroke: none;\n  display: block;\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n}\n\n.with-icon {\n  /* ↓ Set the `inline-flex` context,  which eliminates the word space */\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space, 0.5rem);\n}\n\n.cover {\n  object-position: center;\n  object-fit: cover;\n  height: 100%;\n}\n\n.sr-only {\n  display: inline-block;\n  opacity: 0;\n  background: none;\n  position: absolute;\n  line-height: 0;\n  font-size: 0;\n  overflow: hidden;\n  width: 2px;\n  height: 2px;\n  margin: -1px;\n}\n.sr-only:focus, .sr-only:active {\n  opacity: 1;\n  font-size: inherit;\n  line-height: inherit;\n  width: auto;\n  width: max-content;\n  height: auto;\n  height: max-content;\n  margin: 0;\n  z-index: 1;\n}\n\n.outer-bound {\n  box-sizing: content-box;\n  max-width: var(--outer-bound-width);\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: var(--gutter);\n  padding-right: var(--gutter);\n}\n\n.inner-bound {\n  box-sizing: content-box;\n  max-width: var(--inner-bound-width);\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: var(--gutter);\n  padding-right: var(--gutter);\n  margin: 2rem auto;\n}\n\n.full-width {\n  --half-screen-width: calc((100vw - var(--scrollbarWidth)) / 2);\n  margin-left: calc(50% - var(--half-screen-width));\n  margin-right: calc(50% - var(--half-screen-width));\n}\n\n.list-style-none {\n  list-style: none;\n}\n.list-style-none li {\n  position: static;\n  padding: 0;\n}\n.list-style-none li::before {\n  content: none;\n  display: none;\n}\n\nimg {\n  width: 100%;\n}\n\n.background {\n  background-color: var(--background-color);\n  color: var(--contrast-color);\n}\n\na, button, input, select, textarea {\n  font: inherit;\n  cursor: pointer;\n}\na:focus, button:focus, input:focus, select:focus, textarea:focus {\n  outline: none;\n}\n\ninput {\n  background-color: var(--text-color);\n  color: var(--background-color);\n  font-size: 1rem;\n  line-height: 2em;\n  margin-bottom: 0rem;\n  padding: 0.25em 0.5em;\n}\n\n.icon-button {\n  display: inline-block;\n  height: 0.75em;\n  width: 0.75em;\n  /* ↓ Override the em value with `1cap`  where `cap` is supported */\n  height: 1cap;\n  width: 1cap;\n  overflow: visible;\n  vertical-align: -0.01em;\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n}\n.icon-button svg {\n  fill: currentColor !important;\n  stroke: none;\n  display: block;\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n}\n\n.button, .button-container a {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  color: var(--background-color);\n  background-color: var(--primary-color);\n  text-align: center;\n  text-decoration: none;\n  border-width: var(--border-width);\n  border-style: solid;\n  border-color: var(--primary-color);\n  border-radius: var(--border-radius);\n  outline: none;\n  display: inline-flex;\n  align-items: baseline;\n  font-weight: 600;\n}\n.button::-moz-focus-inner, .button-container a::-moz-focus-inner {\n  border: none;\n}\n.button:active, .button-container a:active {\n  transform: translateY(1px);\n  filter: saturate(150%);\n}\n.button:hover, .button-container a:hover, .button:focus, .button-container a:focus {\n  background-color: transparent;\n  color: var(--primary-color);\n  border-color: var(--primary-color);\n}\n.button > span + span, .button-container a > span + span {\n  margin-left: 0.5ch;\n}\n\n.alt-button, .alt-button-container a {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  color: var(--background-color);\n  background-color: var(--secondary-color);\n  text-align: center;\n  text-decoration: none;\n  border-width: var(--border-width);\n  border-style: solid;\n  border-color: var(--secondary-color);\n  border-radius: var(--border-radius);\n  outline: none;\n  display: inline-flex;\n  align-items: baseline;\n  font-weight: 600;\n}\n.alt-button::-moz-focus-inner, .alt-button-container a::-moz-focus-inner {\n  border: none;\n}\n.alt-button:active, .alt-button-container a:active {\n  transform: translateY(1px);\n  filter: saturate(150%);\n}\n.alt-button:hover, .alt-button-container a:hover, .alt-button:focus, .alt-button-container a:focus {\n  background-color: transparent;\n  color: var(--secondary-color);\n  border-color: var(--secondary-color);\n}\n.alt-button > span + span, .alt-button-container a > span + span {\n  margin-left: 0.5ch;\n}\n\n.body-text a {\n  color: var(--primary-color);\n  font-weight: 600;\n}\n.body-text a:hover, .body-text a:focus {\n  color: var(--primary-color-500);\n}\n.body-text a:focus {\n  outline: 2px solid var(--primary-color-500);\n  outline-offset: 2px;\n}\n.body-text a:active {\n  color: var(--primary-color-800);\n}\n\n.skip-link {\n  position: fixed;\n  z-index: 200;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, -200%);\n  transition: transform 300ms ease-in-out;\n}\n.skip-link:focus {\n  transform: translate(-50%, 0%);\n}\n\n.main-header {\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  padding-left: 0;\n  padding-right: 0;\n  transition: transform 350ms ease-in-out, background 350ms ease-in-out;\n}\n.main-header > div {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n#home:focus {\n  filter: brightness(0.8);\n}\n\n.logo {\n  height: calc(var(--header-height) - 2rem);\n  display: inline-flex;\n  justify-content: center;\n  gap: var(--margin-200);\n}\n.logo svg {\n  height: 100%;\n  width: auto;\n}\n.logo span {\n  display: inline-block;\n  font: inherit;\n  font-size: calc(var(--header-height) - 2rem);\n  line-height: 1;\n  text-decoration: none;\n  font-weight: 900;\n}\n\n.start .main-header {\n  position: fixed;\n  left: 0;\n  width: 100%;\n  --header-background: transparent;\n  color: var(--text-color);\n  background-color: var(--header-background);\n}\n\n.mobile-nav-is-open .main-header {\n  --header-background: #ae1717;\n  --text-color: #fff;\n}\n\n.has-scrolled-past-header .main-header {\n  --header-background: #ae1717;\n  --text-color: #fff;\n}\n.has-scrolled-past-header.has-scrolled-down:not(.mobile-nav-is-open) .main-header {\n  transform: translateY(-100%);\n}\n\n.main-footer {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: var(--margin-400);\n  padding-bottom: var(--margin-400);\n}\n.main-footer > div {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  gap: var(--margin-400);\n}\n\n#cmt-content .main-header {\n  position: static;\n}\n#cmt-content .cmt-object + .cmt-object {\n  margin-top: var(--margin-600);\n}\n#cmt-content .loading-screen {\n  display: none;\n}\n\nbody:not(.cmt-layout) .element-margin--none + * {\n  margin-top: 0 !important;\n}\nbody:not(.cmt-layout) .element-margin--small.background {\n  padding-bottom: var(--margin-400);\n}\nbody:not(.cmt-layout) .element-margin--small.background + *:not(.background) {\n  padding-top: var(--margin-400);\n}\nbody:not(.cmt-layout) .element-margin--small.background + .background {\n  padding-top: var(--margin-400);\n  margin-top: calc(var(--margin-400) * -1) !important;\n}\nbody:not(.cmt-layout) .element-margin--small:not(.background) + *.background {\n  margin-top: var(--margin-400);\n  padding-top: var(--margin-400);\n}\nbody:not(.cmt-layout) .element-margin--small:not(.background) + *:not(.background) {\n  margin-top: var(--margin-400);\n}\nbody:not(.cmt-layout) .element-margin--default.background {\n  padding-bottom: var(--margin-500);\n}\nbody:not(.cmt-layout) .element-margin--default.background + *:not(.background) {\n  padding-top: var(--margin-500);\n}\nbody:not(.cmt-layout) .element-margin--default.background + .background {\n  padding-top: var(--margin-500);\n  margin-top: calc(var(--margin-500) * -1) !important;\n}\nbody:not(.cmt-layout) .element-margin--default:not(.background) + *.background {\n  margin-top: var(--margin-500);\n  padding-top: var(--margin-500);\n}\nbody:not(.cmt-layout) .element-margin--default:not(.background) + *:not(.background) {\n  margin-top: var(--margin-500);\n}\nbody:not(.cmt-layout) .element-margin--medium.background {\n  padding-bottom: var(--margin-600);\n}\nbody:not(.cmt-layout) .element-margin--medium.background + *:not(.background) {\n  padding-top: var(--margin-600);\n}\nbody:not(.cmt-layout) .element-margin--medium.background + .background {\n  padding-top: var(--margin-600);\n  margin-top: calc(var(--margin-600) * -1) !important;\n}\nbody:not(.cmt-layout) .element-margin--medium:not(.background) + *.background {\n  margin-top: var(--margin-600);\n  padding-top: var(--margin-600);\n}\nbody:not(.cmt-layout) .element-margin--medium:not(.background) + *:not(.background) {\n  margin-top: var(--margin-600);\n}\nbody:not(.cmt-layout) .element-margin--large.background {\n  padding-bottom: var(--margin-800);\n}\nbody:not(.cmt-layout) .element-margin--large.background + *:not(.background) {\n  padding-top: var(--margin-800);\n}\nbody:not(.cmt-layout) .element-margin--large.background + .background {\n  padding-top: var(--margin-800);\n  margin-top: calc(var(--margin-800) * -1) !important;\n}\nbody:not(.cmt-layout) .element-margin--large:not(.background) + *.background {\n  margin-top: var(--margin-800);\n  padding-top: var(--margin-800);\n}\nbody:not(.cmt-layout) .element-margin--large:not(.background) + *:not(.background) {\n  margin-top: var(--margin-800);\n}\nbody:not(.cmt-layout) .element-margin--huge.background {\n  padding-bottom: var(--margin-900);\n}\nbody:not(.cmt-layout) .element-margin--huge.background + *:not(.background) {\n  padding-top: var(--margin-900);\n}\nbody:not(.cmt-layout) .element-margin--huge.background + .background {\n  padding-top: var(--margin-900);\n  margin-top: calc(var(--margin-900) * -1) !important;\n}\nbody:not(.cmt-layout) .element-margin--huge:not(.background) + *.background {\n  margin-top: var(--margin-900);\n  padding-top: var(--margin-900);\n}\nbody:not(.cmt-layout) .element-margin--huge:not(.background) + *:not(.background) {\n  margin-top: var(--margin-900);\n}\nbody:not(.cmt-layout) #main .element-margin--default.element-headline + *[class~=element] {\n  padding-top: var(--vertical-unit);\n  margin-top: 0;\n}\nbody:not(.cmt-layout) #main .element-margin--default.element-paragraph + .element-paragraph {\n  padding-top: var(--vertical-unit);\n  margin-top: 0;\n}\nbody:not(.cmt-layout) #main .element-margin--default.element-paragraph + .element-html {\n  padding-top: var(--vertical-unit);\n  margin-top: 0;\n}\nbody:not(.cmt-layout) #main .element-margin--default:not(.background) + .footer-margin {\n  margin-top: var(--margin-800);\n}\nbody:not(.cmt-layout) #main .element-margin--default.background + .footer-margin {\n  padding-top: 0;\n  margin-top: 0;\n}\n\n.footer-margin {\n  opacity: 0;\n  height: 0;\n  background-color: none;\n  border: none;\n}\n\n*:not(.element) + .footer-margin {\n  margin-top: var(--margin-800);\n}\n\n.element-size--fill-screen {\n  height: var(--screen-height);\n}\n.element-size--fill-screen img, .element-size--fill-screen video {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n.element-size--half-screen {\n  height: calc(var(--screen-height) / 2);\n}\n.element-size--half-screen img, .element-size--half-screen video {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n.element-size--third-screen {\n  height: calc(var(--screen-height) / 3);\n}\n.element-size--third-screen img, .element-size--third-screen video {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n.element-size--two-third-screen {\n  height: calc(var(--screen-height) / 3 * 2);\n}\n.element-size--two-third-screen img, .element-size--two-third-screen video {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n@media (min-width: 900px) {\n  .element-size--16x9 {\n    aspect-ratio: 16/9;\n    padding: 0;\n  }\n}\n.element-size--16x9 img, .element-size--16x9 video {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n@media (min-width: 900px) {\n  .element-size--4x3 {\n    aspect-ratio: 4/3;\n    padding: 0;\n  }\n}\n.element-size--4x3 img, .element-size--4x3 video {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n@media (min-width: 900px) {\n  .element-size--1x1 {\n    aspect-ratio: 1/1;\n    padding: 0;\n  }\n}\n.element-size--1x1 img, .element-size--1x1 video {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n\nbody:not(.cmt-layout) .loading-screen {\n  position: fixed;\n  z-index: 800;\n  inset: 0;\n  background: var(--contrast-color-600);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: transform 500ms ease-in-out;\n}\n\n.page-has-loaded .loading-screen {\n  opacity: 0;\n  pointer-events: none;\n}\n.page-has-loaded .loading-screen__animation {\n  animation-play-state: paused;\n}\n\nbody.is-loading .loading-screen {\n  opacity: 1;\n  pointer-events: all;\n}\nbody.is-loading .loading-screen__animation {\n  animation-play-state: running;\n}\n\n@keyframes load-spinner {\n  to {\n    transform: rotate(1turn);\n  }\n}\n@keyframes load-dots {\n  20% {\n    background-position: top;\n  }\n  40% {\n    background-position: bottom;\n  }\n  60% {\n    background-position: center;\n  }\n}\n@keyframes load-bars {\n  0% {\n    background-size: 20% 100%, 20% 100%, 20% 100%;\n  }\n  33% {\n    background-size: 20% 10%, 20% 100%, 20% 100%;\n  }\n  50% {\n    background-size: 20% 100%, 20% 10%, 20% 100%;\n  }\n  66% {\n    background-size: 20% 100%, 20% 100%, 20% 10%;\n  }\n  100% {\n    background-size: 20% 100%, 20% 100%, 20% 100%;\n  }\n}\n.loading-screen__animation {\n  width: 120px;\n  padding: 1rem;\n  background: var(--primary-color);\n  aspect-ratio: 1;\n  border-radius: 50%;\n  --_m:\n  \tconic-gradient(#0000, #000),\n  \tlinear-gradient(#000 0 0) content-box;\n  -webkit-mask: var(--_m);\n  mask: var(--_m);\n  -webkit-mask-composite: source-out;\n  mask-composite: subtract;\n  box-sizing: border-box;\n  animation: load-spinner 1s linear infinite;\n}\n\n.nav__list {\n  list-style: none;\n  display: flex;\n  gap: 2rem;\n}\n.nav__list li {\n  position: static;\n  padding: 0;\n}\n.nav__list li::before {\n  content: none;\n  display: none;\n}\n\n.nav--menu {\n  border: none;\n  color: inherit;\n  align-items: center;\n  justify-content: center;\n  place-self: center;\n  place-content: center;\n  place-items: center;\n  background: none;\n  display: grid;\n  place-items: center;\n  height: auto;\n  width: auto;\n  max-height: min-content;\n}\n.nav--menu svg {\n  width: calc(var(--header-height) - var(--gutter) * 3);\n  height: calc(var(--header-height) - var(--gutter) * 3);\n  fill: currentColor;\n}\n.nav--menu .cross,\n.nav--menu .bars {\n  grid-column: 1/1;\n  grid-row: 1/1;\n  line-height: 0;\n  transition: opacity 200ms ease-in-out;\n}\n.nav--menu .cross {\n  opacity: 0;\n}\n.nav--menu[aria-expanded=true] .cross {\n  opacity: 1;\n}\n.nav--menu[aria-expanded=true] .bars {\n  opacity: 0;\n}\n\n.subnav {\n  display: none;\n}\n\n[aria-expanded=true] + .subnav {\n  display: flex;\n}\n\n@media (max-width: 900px) {\n  #main-nav.nav {\n    position: fixed;\n    right: 0;\n    top: var(--header-height);\n    bottom: 0;\n    display: flex;\n    flex-flow: column;\n    justify-content: space-between;\n    padding: 2rem 1rem;\n    text-align: right;\n    background-color: var(--background-color);\n    box-shadow: -1rem 0 1rem -0.5rem rgba(0, 0, 0, 0.2);\n    overflow-y: auto;\n  }\n  #main-nav.nav:not(.nav--open) {\n    display: none;\n  }\n  #main-nav .nav__list {\n    font-size: 1.265625rem;\n    line-height: 1.5802469136em;\n    margin-bottom: 0rem;\n    flex-flow: column;\n    margin: auto;\n  }\n  #main-nav .subnav {\n    margin: 1rem 0;\n    padding: 1rem;\n    width: calc(100% + 2rem);\n    transform: translateX(-1rem);\n  }\n  #main-nav.nav {\n    min-width: max-content;\n    width: max(40%, 16rem);\n    max-width: 100%;\n  }\n}\n@media (min-width: 900px) {\n  .nav {\n    position: relative;\n  }\n  .nav__list {\n    align-items: center;\n  }\n  .nav--menu {\n    display: none;\n  }\n  .mobile-nav__footer,\n  .mobile-nav__header {\n    display: none;\n  }\n  .subnav {\n    position: absolute;\n    bottom: -2rem;\n    transform: translate(-1rem, 100%);\n    flex-flow: column;\n    justify-content: stretch;\n    align-items: stretch;\n    padding: 0.5rem 0;\n    gap: 0;\n    border-radius: var(--border-radius);\n  }\n  .subnav .nav__item {\n    width: 100%;\n    padding: 0.5rem 1rem;\n  }\n  .subnav .nav__item a {\n    width: 100%;\n  }\n}\n@media (max-width: 319px) {\n  #main-nav.nav {\n    width: 100%;\n  }\n}\n.overlay {\n  position: fixed;\n  inset: 0;\n  z-index: 1000;\n  display: grid;\n  place-content: center;\n  place-items: center;\n  padding: 1rem;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: var(--contrast-color);\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: opacity 500ms ease-in-out;\n}\n.overlay__wrapper {\n  max-width: var(--outer-bound-width);\n}\n.overlay__wrapper > *:not(.overlay--target) {\n  display: none;\n}\n.overlay--open {\n  visibility: visible;\n  pointer-events: all;\n  opacity: 1;\n}\n.overlay__close {\n  cursor: pointer;\n  display: block;\n  position: absolute;\n  z-index: 1000;\n  background: none;\n  border: none;\n  font-size: 1.8020324707rem;\n  line-height: 1.1098579146em;\n  margin-bottom: 0rem;\n  margin: 0;\n  right: calc(var(--outer-bound));\n  top: calc(var(--outer-bound));\n  color: inherit;\n}\n.overlay__close svg {\n  display: block;\n  height: 1em;\n  width: 1em;\n  fill: currentColor;\n}\n\n.flash-messages {\n  position: fixed;\n  top: 0;\n  z-index: 10;\n  inset: auto 0;\n  font-weight: 800;\n  margin-bottom: -1rem;\n}\n.flash-messages + * {\n  margin-top: 0;\n}\n.flash-messages .message {\n  color: var(--text-color);\n  background-color: skyblue;\n  transition: 350ms ease-out;\n  transition-property: max-height, opacity;\n  max-height: 4rem;\n  overflow: hidden;\n}\n.flash-messages .message .icon {\n  font-size: 2rem;\n}\n.flash-messages .message__wrapper {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  padding: 1rem;\n}\n.flash-messages .message__dismiss {\n  font-size: 1.6018066406rem;\n  line-height: 1.2485901539em;\n  margin-bottom: 0rem;\n}\n.flash-messages .message--error {\n  color: var(--background-color);\n  background-color: red;\n}\n.flash-messages .message--warning {\n  color: var(--text-color);\n  background-color: yellow;\n}\n.flash-messages .message--success {\n  color: var(--background-color);\n  background-color: green;\n}\n.flash-messages .message--dismissed {\n  pointer-events: none;\n  max-height: 0;\n}\n\n.hero {\n  position: relative;\n  overflow: hidden;\n}\n.hero__background {\n  position: absolute;\n  inset: 0;\n}\n.hero__foreground {\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n}\n.hero img {\n  object-position: center;\n  object-fit: cover;\n  height: 100%;\n}\n.hero__caption {\n  z-index: 1;\n  margin-top: auto;\n  margin-bottom: auto;\n  padding-top: var(--margin-600);\n  padding-bottom: var(--margin-600);\n}\n@media (min-width: 900px) {\n  .hero__caption {\n    width: 50%;\n    margin: auto auto auto 12.5%;\n  }\n}\n@media (min-width: 1200px) {\n  .hero__caption {\n    width: 64ch;\n  }\n}\n\n.media-object {\n  display: flex;\n  gap: 2rem;\n}\n.media-object > :first-child {\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: 50%;\n}\n.media-object > :last-child {\n  flex-basis: 50%;\n  flex-shrink: 1;\n  flex-grow: 1;\n}\n@media (max-width: 900px) {\n  .media-object {\n    flex-flow: column;\n    gap: 1rem;\n  }\n}\n@media (min-width: 900px) {\n  .media-object--inverted {\n    flex-direction: row-reverse;\n  }\n}\n.media-object__image--fill-height {\n  align-self: stretch;\n  width: auto;\n  height: auto;\n}\n.media-object__image--fill-height img, .media-object__image--fill-height video {\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n}\n.media-object__image--fill-screen img, .media-object__image--fill-screen video {\n  height: var(--screen-height);\n  object-fit: cover;\n  object-position: center;\n}\n\n.full-width.media-object .body-text > * {\n  max-width: calc(var(--outer-bound-width) / 2);\n  padding-right: 1rem;\n}\n.full-width.media-object--inverted .body-text > * {\n  padding-left: 1rem;\n  padding-right: 0;\n}\n@media (min-width: 900px) {\n  .full-width.media-object--inverted .body-text > * {\n    margin-left: auto;\n  }\n}\n\n.quote {\n  display: flex;\n  flex-flow: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  padding-top: var(--margin-800);\n  padding-bottom: var(--margin-800);\n}\n.quote[style*=custom-background] {\n  background-image: var(--custom-background);\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  color: var(--contrast-color);\n}\n.quote__block {\n  margin-bottom: 0;\n  font-size: 1.6018066406rem;\n  line-height: 1.2485901539em;\n  margin-bottom: 0rem;\n  font-weight: 600;\n}\n@media (min-width: 600px) {\n  .quote__block {\n    word-break: keep-all;\n  }\n}\n.quote__author {\n  font-size: 1.265625rem;\n  line-height: 1.5802469136em;\n  margin-bottom: 0rem;\n  font-weight: 800;\n}\n.quote__figure, .quote__figcaption {\n  padding: 0 var(--gutter);\n}\n.quote > * + * {\n  margin-top: var(--margin-400);\n}\n\n.splide__track, .splide__list, .splide__slide, .splide figure {\n  height: 100%;\n}\n.splide img {\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n}\n.splide ul {\n  list-style: none;\n}\n.splide ul li {\n  position: static;\n  padding: 0;\n}\n.splide ul li::before {\n  content: none;\n  display: none;\n}\n\n.slide__figure {\n  position: relative;\n}\n.slide__caption {\n  position: absolute;\n  bottom: var(--margin-400);\n  left: var(--margin-300);\n  right: var(--margin-300);\n  font-size: 1.6018066406rem;\n  line-height: 1.2485901539em;\n  margin-bottom: 0rem;\n  font-weight: 600;\n  color: var(--background-color);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n}\n\n.tiles {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: var(--margin-300);\n}\n\n.tile {\n  position: relative;\n}\n.tile img {\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n}\n.tile__caption {\n  position: absolute;\n  bottom: var(--margin-200);\n  left: var(--margin-300);\n  right: var(--margin-300);\n  font-size: 1.265625rem;\n  line-height: 1.5802469136em;\n  margin-bottom: 0rem;\n  font-weight: 600;\n  color: var(--background-color);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n}\n\n.expander .body-text {\n  margin-top: var(--margin-300);\n}\n\n.cards {\n  display: flex;\n  flex-flow: row;\n  gap: var(--margin-400);\n}\n\n.card {\n  flex: 1 1 0;\n}\n\n.light-box {\n  overflow: hidden;\n}\n.light-box figure {\n  height: 100%;\n  width: 100%;\n}\n.light-box img,\n.light-box video {\n  height: 100%;\n  width: 100%;\n  object-fit: contain;\n  object-position: center;\n  max-height: 80vh;\n}\n.light-box figure {\n  transition: 500ms ease-out;\n  transform-origin: center;\n  opacity: 0;\n  transform: translateY(-10%);\n}\n.light-box--active {\n  z-index: 10;\n  opacity: 1;\n}\n.light-box--active figure {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.light-box__controlls {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.265625rem;\n  line-height: 1.5802469136em;\n  margin-bottom: 0rem;\n  font-variant-numeric: tabular-nums;\n}\n.light-box__controlls button {\n  cursor: pointer;\n  display: block;\n  border: none;\n  background: none;\n  color: inherit;\n}\n.light-box__controlls svg {\n  display: block;\n  height: 2em;\n  width: 2em;\n  fill: currentColor;\n}\n.light-box__controlls .light-box--total::after {\n  content: \" | \";\n}\n\n.map .mapboxgl-marker svg path {\n  fill: var(--primary-color, blue) !important;\n}\n\n/**\n * main.scss\n */","/**\n * home/jbraun/Sites/halma-kickstart/src/css/libhalma/_reset.scss\n *\n * inspired by https://hankchizljaw.com/wrote/a-modern-css-reset/\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n*, *::before, *::after {\n\tbox-sizing: border-box;\n\tmargin: 0;\n\tpadding: 0;\n}\n\nhtml:focus-within {\n\tscroll-behavior: smooth;\n}\n\nbody {\n\tmin-height: 100vh;\n\tline-height: 1.35;\n\ttext-rendering: optimizeSpeed;\n}\n\nmain {\n\ttext-rendering: optimizeLegibility;\n}\n\nimg, picture, video {\n\tdisplay: block;\n\tmax-width: 100%;\n\tmax-height: 100%;\n\theight: auto;\n\tobject-fit: contain;\n}\n\n\n///////////////////\n//  List styles  //\n///////////////////\n\nol, ul {\n\tlist-style: none;\n\tcounter-reset: li;\n\n\t> li {\n\t\tposition: relative;\n\t\tpadding-left: 2ch;\n\n\t\t&::before {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t}\n\t}\n}\n\nol > li::before {\n\tcontent: counter(li)'.';\n\tcounter-increment: li;\n}\n\nul > li::before {\n\tcontent: var(--bullet-list-char, '•');\n}\n\ninput, button, textarea, select {\n\tfont: inherit;\n}\n\na:not([class]) {\n\ttext-decoration-skip-ink: auto;\n}\n\n@media (prefers-reduced-motion: reduce) {\n\t*, *::before, *::after {\n\t\tanimation-duration: 0.01ms !important;\n\t\tanimation-iteration-count: 1 !important;\n\t\ttransition-duration: 0.01ms !important;\n\t\tscroll-behavior: auto !important;\n\t}\n}\n","/**\n * _settings.scss\n *\n * Use Sass variables and custom properties as appropriate, both are possible\n */\n\n@use 'sass:map';\n\n/**********\n * Colors *\n **********/\n\n$colors: (\n\tprimary: #ac3e3e,\n\tsecondary: #5a74bd,\n\tbackground: #ae1717,\n\tcontrast: #fff, // color-for-bg(var(--primary-color), var(--background-color), $text-color)\n\ttext: #333\n);\n\n$shades: (\n\t200: 20%,\n\t300: 10%,\n\t400: 0%,\n\t500: 10%,\n\t600: 20%,\n\t700: 30%,\n\t800: 40%,\n\t900: 60%,\n);\n\n@function color($key) {\n\t@return map.get($colors, $key);\n}\n\n$border: (\n\twidth: 2px,\n\tradius: 4px,\n\tcolor: currentColor,\n\ttype: solid,\n);\n\n/********\n * Typo *\n ********/\n\n$use-type-scale: true;\n$vertical-unit: 2rem;\n$modular-scale-ratio: 1.125;\n\n$font-sizes: (\n\t100: 0.5,\n\t200: 0.8,\n\t400: 1,\n\t500: 1.2,\n\t600: 1.4,\n\t700: 1.75,\n\t800: 2.1,\n\t900: 3.8,\n);\n\n\n/************\n * Measures *\n ************/\n$min-header-height: 5rem;\n$max-header-height: 6.5rem;\n\n$inner-bound-width: 58rem;\n$outer-bound-width: 78rem;\n\n$min-supported-screen-width: 320px;\n$max-supported-screen-width: 3440px;\n\n$gutter: 1rem;\n\n$margins: (\n\t200: $gutter * 0.5,\n\t300: $gutter,\n\t400: $gutter * 2,\n\t500: $gutter * 4,\n\t600: $gutter * 6,\n\t800: $gutter * 9,\n\t900: $gutter * 12,\n);\n\n/********************\n * Options/Switches *\n ********************/\n$debug-base-line-grid: false;\n$font-path: '/dist/fonts/';\n\n$full-width-fix: true; // body-text in full-width containers aligns with outer-bound\n$collapsable-header: true; // header collapses on scroll-down\n$substract-header-height: false; // subtracts header height from screen-heighht\n$fade-in-transition: true; // fade in elements when page has loaded\n$loader: 'spinner'; // loading screen type [spinner, dots, bars]\n$start-dark-background: false; // sets the color for header and hero to contrast-color\n$nav-style: 'default'; // sets the style for the navbar [default, folding]\n\n/*****************\n *  Breakpoints  *\n *****************/\n$tablet-portrait-breakpoint: 600px !default;\n$tablet-landscape-breakpoint: 900px !default;\n$desktop-breakpoint: 1200px !default;\n$big-desktop-breakpoint: 1800px !default;\n$huge-desktop-breakpoint: 2400px !default;\n// ... extend as needed\n\n$breakpoints: (\n\tphone: 320px,\n\ttablet-portrait: 600px,\n\ttablet-landscape: 900px,\n\tdesktop: 1200px,\n\tdesktop-big: 1800px,\n\tdesktop-huge: 2400px,\n);","/**\n * src/css/libhalma/_classes.scss\n *\n * Predefined utility classes\n *\n * @author C.Coull <c.coull@agentur-halma.de>\n * @author J. Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-27\n */\n\n// Screenreader only\n@mixin sr-only($visible-on-focus: true) {\n\t// color: transparent;\n\tdisplay: inline-block;\n\topacity: 0;\n\tbackground: none;\n\tposition: absolute;\n\tline-height: 0;\n\tfont-size: 0;\n\toverflow: hidden;\n\twidth: 2px;\n\theight: 2px;\n\tmargin: -1px;\n\n\t@if $visible-on-focus {\n\t\t&:focus,\n\t\t&:active {\n\t\t\topacity: 1;\n\t\t\t// color: inherit;\n\t\t\tfont-size: inherit;\n\t\t\tline-height: inherit;\n\t\t\twidth: auto;\n\t\t\twidth: max-content;\n\t\t\theight: auto;\n\t\t\theight: max-content;\n\t\t\tmargin: 0;\n\t\t\tz-index: 1;\n\t\t}\n\t}\n}\n\n@mixin bound($bound-width: 64rem, $padding: false) {\n\tbox-sizing: content-box; // Yes ;-) see EveryLayout: Center\n\tmax-width: $bound-width;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\t\n\t@if $padding {\n\t\tpadding-left: $padding;\n\t\tpadding-right: $padding;\n\t}\n}\n\n\n// Take scrollbar-width in to account\n// @see https://destroytoday.com/blog/100vw-and-the-horizontal-overflow-you-probably-didnt-know-about\n@mixin full-width($scrollbar-width: 0) {\n\t--half-screen-width: calc((100vw - #{$scrollbar-width}) / 2);\n\tmargin-left: calc(50% - var(--half-screen-width));\n\tmargin-right: calc(50% - var(--half-screen-width));\n}\n\n@mixin skip-link {\n\tposition: fixed;\n\tz-index: 200;\n\ttop: 0;\n\tleft: 50%;\n\ttransform: translate(-50%, -200%);\n\ttransition: transform 300ms ease-in-out;\n\t\n\t&:focus {\n\t\ttransform: translate(-50%, 0%);\n\t}\n}\n\n@mixin list-style-none {\n\tlist-style: none;\n\n\tli {\n\t\tposition: static;\n\t\tpadding: 0;\n\t\t\n\t\t&::before {\n\t\t\tcontent: none;\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n// set Thumn and Background Color\n// use on html to set global\n// Webkit and Chromium will ignore color when size isn't set\n@mixin scrollbars(\n\t$foreground-color: #999,\n  $background-color: #333,\n  $size: false\n) {\n\t@if $size {\n\t\t// For Chrome & Safari\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t}\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n    background: $foreground-color;\n  }\n  &::-webkit-scrollbar-track {\n    background: var(--background-color);\n  }\n\n  // Standard version (Firefox only for now)\n  scrollbar-color: $foreground-color var(--background-color);\n}","/**\n * src/css/libhalma/media-object.scss\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2021-05-31\n */\n@mixin media-object($space: var(--gutter)) {\n  display: flex;\n  // flex-wrap: wrap;\n  gap: $space;\n\n  // [class*=\"body\"] {\n  //   flex: 1 0 0;\n  // }\n\n  & > :first-child {\n    flex-grow: 1;\n\t\tflex-shrink: 1;\n\t\tflex-basis: 50%;\n  }\n\t\n  & > :last-child {\n\t\tflex-basis: 50%;\n\t\tflex-shrink: 1;\n    flex-grow: 1;\n    // min-inline-size: 50%;\n  }\n}\n","/**\n * src/css/libhalma/_vertical_rhythm.scss\n *\n * @author Carsten Coull <c.coull@agentur-halma.de>\n * @package libhalma\n */\n@use \"sass:math\";\n@use \"sass:map\";\n\n$use-type-scale: true !default;\n$vertical-unit: 2rem !default;\n$modular-scale-ratio: 1.125 !default;\n\n$font-sizes: (\n\t100: 0.5,\n\t200: 0.8,\n\t400: 1,\n\t500: 1.2,\n\t600: 1.4,\n\t700: 1.75,\n\t800: 2.1,\n\t900: 3.8,\n) !default;\n\n@if $use-type-scale {\n\n\t$weight: 100;\n\t$font-sizes: ();\n\n\t@for $weight from 1 to 10 {\n\t\t$delta: $weight - 4;\n\t\t$value: math.pow($modular-scale-ratio, $delta);\n\t\t$font-sizes: map-merge($font-sizes, ($weight * 100: $value));\n\t}\n}\n\n\n@mixin type-setting($level: 400, $margin-bottom: 0) {\n\n\t$font-size: map-get($font-sizes, $level);\n\n\t@if type-of($font-size) != 'number' {\n\t\t@debug \"Could not get font-size vor level \" + $level;\n\t}\n\n\t// Strip unit\n\t$vu: math.div($vertical-unit, $vertical-unit * 0 + 1);\n\t$line-height: math.div($vu, $font-size);\n\n\t// Make sure line-height is at least 1 times the vertical unit\n\t@if $line-height > 0 { // prevent endless loop if somehow line-height is zero or negative\n\t\t@while $line-height < 1 {\n\t\t\t$line-height: $line-height * 1.5; // Steps up half a vertical unit at each step\n\t\t}\n\t\t// $line-height: math.div($line-height, 1.41421);\n\t}\n\n\tfont-size: $font-size + rem;\n\tline-height: $line-height + em;\n\tmargin-bottom: ($line-height * $margin-bottom) + rem;\n}\n\n\n$debug-base-line-grid: true;\n$visual-base-line-grid-offset: -16px !default;\n$visual-base-line-grid-above: true !default;\n\n// Visual baseline grid for debugging (\"Grundlinienraster\")\n@if $debug-base-line-grid {\n\tbody {\n\t\tposition: relative;\n\t}\n\t.debug-base-line-grid {\n\t\tbackground-image: linear-gradient(\n\t\t\tto bottom,\n\t\t\ttransparent 0,\n\t\t\ttransparent calc(#{$vertical-unit}),\n\t\t\trgba(tomato, 0.1) calc(#{$vertical-unit}),\n\t\t\trgba(tomato, 0.1)\n\t\t);\n\t\tbackground-size: 100% (2 * $vertical-unit);\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tpointer-events: none;\n\t\t@if $visual-base-line-grid-above {\n\t\t\tz-index: 32766;\n\t\t}\n\t\t@else {\n\t\t\tz-index: 0;\n\t\t}\n\t\ttop: $visual-base-line-grid-offset;\n\t}\n}\n\n","/**\n * libhalma/_rwd.scss\n *\n * Breakpoints, media queries, responsive webdesign\n * See: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862\n *\n * @usage: @include for-size(tablet-landscape-up) { ... }\n *\t\t\t\t Use a pre devined size from $breakpoints with added '-up' or '-down' for direction.\n *\n * \t\t\t\t @include for-size(1200px, up) { ... }\n *\t\t\t\t If second parameter is 'up' or 'down' it will be used as direction and a custom size can be used.\n *\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>, Carsten Coull <c.coull@agebtur-halma.de>\n * @package libhalma\n */\n\n$breakpoints: (\n\ttablet-portrait: 600px,\n\ttablet-landscape: 900px,\n\tdesktop: 1200px,\n\tdesktop-big: 1800px,\n\tdesktop-huge: 2400px,\n) !default;\n\n@mixin for-size($size, $direction: false) {\n\t$notFound: true;\n\n\t@if $direction {\n\t\t@if $direction == 'up' {\n\t\t\t$notFound: false;\n\t\t\t@media (min-width: $size) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if $direction == 'down' {\n\t\t\t$notFound: false;\n\t\t\t@media (max-width: $size) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t} @else {\n\t\t@each $breakpoint, $width in $breakpoints {\n\t\t\t@if $size == #{$breakpoint}-up {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (min-width: #{$width}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t} @else if $size == #{$breakpoint}-down {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (max-width: #{$width}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t} @else if $size == $breakpoint {\n\t\t\t\t$notFound: false;\n\t\t\t\t@media (max-width: #{$width - 1}) {\n\t\t\t\t\t@content;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@if $notFound {\n\t\t@error \"Breakpoint: no width for #{$size} devined\";\n\t}\n}\n","@use \"sass:math\";\n/**\n * src/css/mixins/_utils.scss\n *\n * Utility mixins and functions\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n\n/**\n * strip-unit\n *\n * Returns the unitless number\n * From: https://css-tricks.com/snippets/sass/strip-unit-function/\n *\n * @param number\n * @return number\n */\n@function strip-unit ($number) {\n\t@if type-of ($number) == 'number' and not unitless ($number) {\n\t\t@return math.div($number, ($number * 0 + 1));\n\t}\n\t@return $number;\n}\n\n\n\n/**\n * pow\n *\n * Return the number risen to the power of n\n * From: https://css-tricks.com/snippets/sass/power-function/\n *\n * @param number \tThe operator\n * @param exp \t\tThe exponent\n * @return number\n */\n@function pow ($number, $exp) {\n\t$val: 1;\n\t@if $exp > 0 {\n\t\t@for $i from 1 through $exp {\n\t\t\t$val: $val * $number;\n\t\t}\n\t}\n\t@return $val;\n}\n\n/**\n * Calculates the sRGB luma of a colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Math nicked from a great Thoughtbot article by Reda Lemeden:\n * http://robots.thoughtbot.com/closer-look-color-lightness\n */\n\n@function luma($c) {\n\t$-local-red: red(rgba($c, 1));\n\t$-local-green: green(rgba($c, 1));\n\t$-local-blue: blue(rgba($c, 1));\n\n\t@return math.div((0.2126 * $-local-red  + 0.7152 * $-local-green + 0.0722 * $-local-blue), 255);\n}\n\n\n/*\n * Picks a colour from two options based on which one is more visible\n * on the given background colour.\n *\n * From: https://lnikki.la/articles/sass-better-colour-based-on-brightness/\n *\n * Usage: color-for-bg($bg-color, $color-1, $color-2)\n */\n\n@function color-for-bg($bg, $c1, $c2) {\n\t$bg-luma: luma($bg);\n\t$c1-luma: luma($c1);\n\t$c2-luma: luma($c2);\n\n\t$c1-diff: abs($bg-luma - $c1-luma);\n\t$c2-diff: abs($bg-luma - $c2-luma);\n\n\t@if $c1-diff > $c2-diff {\n\t\t@return $c1;\n\t}\n\t@else {\n\t\t@return $c2;\n\t}\n}\n\n/*\n * @author Carsten Coull <c.coull@agentur-halma.de>\n *\n * Slope Utilits\n * sets a Graph to use for unit\n *\n * Needs a calc support\n */\n\n/*\n * for fluid type to fit to screen;\n */\n@mixin slope-type($slope, $offset: 1rem) {\n\tfont-size: $offset * (1 + $slope);\n\tfont-size: calc(#{slope-size($slope, $offset)});\n\tline-height: 1em;\n\n\t@include for-size($m) {\n\t\tfont-size: $offset * (2 + $slope);\n\t\tfont-size: calc(#{slope-size($slope, $offset)});\n\t}\n\tline-height: 1em;\n}\n\n@function slope($slope, $offset: 1rem) {\n\t@return (#{$slope} *  100vw + #{$offset});\n}\n\n/*\n * Sets a fluid Unit between to Values\n *\n * $min-size: Minimum Value\n * $max-size: Maximum Value\n * $min-view: Size at which to use $min-size\n * $max-view: Size at which to use $max-size\n *\n * works best with px Unit\n */\n\n@function slope-minmax($min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\t$slope: ($max-size - $min-size) / ($max-view - $min-view);\n\t$offset: ($slope * $min-view) - $min-size;\n\n\t@return (100vw * #{$slope} - #{$offset});\n}\n\n@mixin slope-type-minmax ($min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\tfont-size: $min-size;\n\tline-height: 1.125em;\n\t// margin-bottom: 1.125em;\n\n\t@media (min-width: $min-view) {\n\t\tfont-size: calc(#{slope-minmax($min-size, $max-size, $min-view, $max-view)});\n\t}\n\n\t@media (min-width: $max-view) {\n\t\tfont-size: $max-size;\n\t}\n}\n\n/* Can be used with Custom Proporties */\n@mixin slope-property-minmax ($property, $min-size: 16px, $max-size: 124px, $min-view: 320px, $max-view: 1920px) {\n\t#{$property}: $min-size;\n\n\t@media (min-width: $min-view) {\n\t\t#{$property}: calc(#{slope-minmax($min-size, $max-size, $min-view, $max-view)});\n\t}\n\n\t@media (min-width: $max-view) {\n\t\t#{$property}: $max-size;\n\t}\n}\n\n@function rem-to-px($rem) {\n\t@return (strip-unit($rem) * 16) * 1px;\n}\n\n@function px-to-rem($px) {\n\t@return math.div(strip-unit($px), 16) * 1rem;\n}\n\n@function slope-rem-minmax($min-size: 1rem, $max-size: 7.5rem, $min-view: 320px, $max-view: 1920px) {\n\t$slope: math.div(($max-size - $min-size), strip-unit(px-to-rem($max-view) - px-to-rem($min-view)));\n\t$offset: strip-unit($slope * px-to-rem($min-view)) - $min-size;\n\n\t@return clamp(#{$min-size}, (100vw * #{strip-unit($slope)}) - #{$offset}, #{$max-size});\n}\n\n@mixin fixed-ratio ($width, $height) {\n\tdisplay: block;\n\tposition: relative;\n\tmax-width: 100%;\n\t\n\t&::after {\n\t\tcontent: '';\n\t\theight: 0;\n\t\tpadding-bottom: math.div( $height, $width ) * 100%;\n\t\tdisplay: block;\n\t}\n\t\n\t& > *:first-child {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t}\n\n\t@supports(aspect-ratio: 1 / 1) {\n\t\taspect-ratio: math.div( $width, $height );\n\n\t\t&::after {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t& > *:first-child {\n\t\t\tposition: static;\n\t\t}\n\t}\n}\n","/**\n * _ui.scss\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n */\n\n@use 'sass:math';\n\n/**\n * Reset button\n * See: https://fvsch.com/styling-buttons/\n */\n@mixin button-reset {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  cursor: pointer;\n}\n\n$color: #333 !default;\n$background-color: #fff !default;\n$padding: 1rem !default;\n$border-radius: 4px !default;\n$border-width: 2px !default;\n$border-color: currentColor !default;\n$border-color-hover: currentColor !default;\n$color-hover: $background-color !default;\n$background-color-hover: $color !default;\n\n@mixin button(\n  $color: $color,\n  $background-color: $background-color,\n  $padding: $padding,\n  $border-radius: $border-radius,\n  $border-width: $border-width,\n  $border-color: $border-color,\n  $border-color-hover: $border-color-hover,\n\t$color-hover: $color-hover,\n\t$background-color-hover: $background-color-hover,\n) {\n  @include button-reset;\n\n  // margin: $border-width 0;\n  padding: math.div($padding, 2) $padding;\n\n  color: $color;\n  background-color: $background-color;\n  text-align: center;\n  text-decoration: none;\n  \n\tborder-width: $border-width;\n  border-style: solid;\n  border-color: $border-color;\n  border-radius: $border-radius;\n  outline: none;\n\t\n  &::-moz-focus-inner {\n    border: none;\n  }\n\n  &:active {\n    transform: translateY(1px);\n    filter: saturate(150%);\n  }\n\n  &:hover,\n  &:focus {\n    background-color: $background-color-hover;\n    color: $color-hover;\n    border-color: $border-color-hover;\n  }\n\n  // for buttons with icon\n  display: inline-flex;\n  align-items: baseline;\n\n  > span + span {\n    margin-left: 0.5ch;\n  }\n}","/**\n * The Stack\n *\n * Spacing for vertically stacked blocks\n */\n\n$stack-spacing: 1rem !default;\n\n@mixin stack($spacing: $stack-spacing) {\n\t> * + * {\n\t\tmargin-top: $spacing;\n\t}\n}\n\n\n","/**\n * From: EveryLayout\n */\n@mixin center($max-width: false) {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\t@if $max-width {\n\t\tmax-width: $max-width;\n\t}\n}\n","/**\n * The Cluster\n *\n * https://every-layout.dev/demos/cluster-ctas/\n *\n * We can use `gap` now on flexbox items, so it gets really easy now :-)\n */\n\n$cluster-spacing: 1rem !default;\n$cluster-gap: true;\n\n@mixin cluster($spacing: $cluster-spacing, $use-gap: $cluster-gap) {\n  @if $use-gap {\n    gap: $spacing;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n  } @else {\n    > * {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n      align-items: center;\n      margin: calc(#{$spacing} / 2 * -1);\n    }\n  }\n\n  @if $use-gap != true {\n    > * > * {\n      margin: calc(#{$spacing} / 2);\n    }\n  }\n}\n","/**\n * src/css/libhalma/_libhalma.scss\n *\n * Libhalma: A simple, solid and accessible basic library for css\n *\n * @author Johannes Braun <j.braun@agentur-halma.de>\n * @package libhalma\n * @version 2020-11-09\n */\n\n@use 'settings';\n\n// Edit as needed\n\n@forward\"shapes/lib/classes\";\n\n@forward\"shapes/lib/fluid-type\";\n\n@forward\"shapes/lib/media-object\";\n\n@forward\"shapes/lib/type-setting\" with (\n\t$use-type-scale: settings.$use-type-scale,\n\t$vertical-unit: settings.$vertical-unit,\n\t$modular-scale-ratio: settings.$modular-scale-ratio,\n\t$font-sizes: settings.$font-sizes\n);\n\n@forward\"shapes/lib/rwd\" with (\n\t$breakpoints: settings.$breakpoints\n);\n\n@forward\"shapes/lib/utils\";\n\n@forward\"shapes/lib/button\" with (\n  $color: var(--background-color),\n  $background-color: var(--primary-color),\n  $padding: settings.$gutter,\n  $border-radius: var(--border-radius),\n  $border-width: var(--border-width),\n  $border-color: var(--primary-color),\n  $border-color-hover: var(--primary-color),\n\t$background-color-hover: transparent\n);\n\n@forward\"shapes/lib/box\" with (\n  $box-color: var(--contrast-color),\n  $box-background: var(--background-color),\n  $box-padding: settings.$gutter,\n  $box-border-color: var(--primary-color),\n  $box-border-width: 0, //settings.$border-width,\n  $box-border-radius: 0\n);\n\n@forward\"shapes/lib/stack\" with ($stack-spacing: var(--margin-400));\n\n@forward\"shapes/lib/center\";\n\n@forward\"shapes/lib/cluster\";\n\n@forward\"shapes/lib/cover\";\n\n@forward\"shapes/lib/icon\";\n","/**\n * src/css/partials/_typography.scss\n *\n * Typography related styles\n *\n */\n\n@use \"shapes\" as *;\n\n/************\n * Webfonts *\n ************/\n\n// Woff2 is preferered and - if available - the only format needed.\n// Use a font-face include line for each font face (regular, bold, italic, bold-italic, like shown below\n\n/**\n * @example\n *\n * @include font-face('FontName', '../fonts/FontName-Regular', normal, normal, $file-types: woff2);\n * @include font-face('FontName', '../fonts/FontName-Bold', bold, normal, $file-types: woff2);\n * @include font-face('FontName', '../fonts/FontName-Italic', normal, italic, $file-types: woff2);\n */\n\n\nhtml {\n\t-moz-osx-font-smoothing: grayscale;\n\t-webkit-font-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n\tfont-size: slope-rem-minmax(0.85rem, 1.2rem, 320px, 1920px);\n}\n\nbody {\n\t@include type-setting(400);\n\tcolor: var(--text-color);\n\tfont-family: 'Inter', sans-serif;\n}\n\n.headline--big, h1 {\n\t@include type-setting(900);\n\tfont-weight: 900;\n}\n\n.headline--default, h2 {\n\t@include type-setting(800);\n\tfont-weight: 800;\n}\n\n.headline--small, h3 {\n\t@include type-setting(600);\n}\n\n.headline, h1, h2, h3, h4, h5, h6 {\n\tline-height: 1.2;\n\tletter-spacing: -0.02em;\n\thyphens: auto;\n\t\n\t@include for-size(tablet-landscape-up) {\n\t\thyphens: manual;\n\t}\n}\n\n.body-text {\n\th1, h2, h3, h4, h5, h6 {\n\t\tmargin-bottom: var(--vertical-unit);\n\t}\n\n\tp {\n\t\tmargin-bottom: 0;\n\t}\n}\n\n.small {\n\t@include type-setting(200);\n}","/**\n* partials/_common.scss\n*\n* Common styles, like e.g. resets, basic styles...\n*/\n\n@use \"settings\" as *;\n@use \"shapes\";\n\n\n/////////////////////////\n//  Custom properties  //\n/////////////////////////\n\n:root {\n\t@each $color, $value in $colors {\n\t\t--#{$color}-color: #{$value};\n\n\t\t@each $shade, $weight in $shades {\n\t\t\t@if $shade < 400 {\n\t\t\t\t--#{$color}-color-#{$shade}: #{lighten($value, $weight)};\n\t\t\t} @else if $shade > 400 {\n\t\t\t\t--#{$color}-color-#{$shade}: #{darken($value, $weight)};\n\t\t\t} @else {\n\t\t\t\t--#{$color}-color-#{$shade}: #{$value};\n\t\t\t}\n\t\t}\n\t}\n\n\t@each $key, $margin in $margins {\n\t\t--margin-#{$key}: #{$margin};\n\t}\n\n\t@each $key, $value in $border {\n\t\t--border-#{$key}: #{$value};\n\t}\n\n\t--border: var(--border-color) var(--border-width) var(--border-type) var(--border-radius);\n\n  --gutter: 1rem;\n  --vertical-unit: #{$vertical-unit};\n  \n\t--outer-bound: #{2 * $gutter};\n  --inner-bound-width: #{$inner-bound-width};\n  --outer-bound-width: #{$outer-bound-width};\n\t--header-height: #{shapes.slope-rem-minmax($min-header-height, $max-header-height, $min-supported-screen-width, $max-supported-screen-width)};\n\n\t@if $substract-header-height {\n\t\t--screen-height: calc(100vh - var(--header-height));\n\t} @else {\n\t\t--screen-height: 100vh;\n\t}\n}\n\nhtml {\n  scroll-behavior: smooth;\n  @include shapes.scrollbars(var(--primary-color), var(--secondary-color), 1rem);\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n}\n\n.main-content {\n\tflex: 1;\n\twidth: 100%;\n\n\t// & > *:first-of-type > *:first-child:not(.full-width) {\n\t// \tmargin-top:  var(--header-height);\n\t// \tpadding-top: var(--margin-400);\n\t// }\n\t\n\th1, h2, h3, h4, h5, h6 {\n\t\t& + .body-text {\n\t\t\tmargin-top: var(--margin-200);\n\t\t}\n\t}\n}\n\n@if $fade-in-transition {\n\t.main-content > * {\n\t\ttransition-duration: 750ms;\n\t\ttransition-timing-function: ease-out, linear;\n\t\ttransition-property: transform, opacity;\n\t}\n\t\n\tbody:not(.page-has-loaded):not(.cmt-layout) {\n\t\t.main-content > * {\n\t\t\ttransform: translateY(20vh);\n\t\t\topacity: 0;\n\t\t}\n\t}\n}\n\n@each $key, $margin in $margins {\n\t.margin--#{$key} {\n\t\tmargin-bottom: var(--margin-#{$key});\n\t}\n\t\n\t.margin-bottom--#{$key} {\n\t\tmargin-bottom: var(--margin-#{$key});\n\t}\n\t\n\t.margin-top--#{$key} {\n\t\tmargin-top: var(--margin-#{$key});\n\t}\n\t\n\t.gap--#{$key} {\n\t\tgap: var(--margin-#{$key});\n\t}\n}\n\n.box {\n  @include shapes.box;\n}\n\n.box--inverted {\n\t@include shapes.box(\n\t\t$color: color('background'),\n\t\t$background: color('secondary'),\n\t\t$border-color: color('background')\n\t);\n}\n\n.inverted {\n\t--primary-color: #{color('secondary')};\n\t--secondary-color: #{color('primary')};\n\t--background-color: #{color('contrast')};\n\t--text-color: #{color('background')};\n\t--contrast-color: #{color('text')};\n}\n\n.cluster {\n  @include shapes.cluster;\n}\n\n.cluster-end {\n  justify-content: flex-end;\n}\n\n.center {\n  @include shapes.center;\n}\n\n.stack {\n  @include shapes.stack;\n}\n\n.icon {\n  @include shapes.icon;\n}\n\n.with-icon {\n  @include shapes.with-icon($gutter * 0.5);\n}\n\n.cover {\n\tobject-position: center;\n\tobject-fit: cover;\n\theight: 100%;\n}\n\n.sr-only {\n  @include shapes.sr-only(true);\n}\n\n.outer-bound {\n  @include shapes.bound(var(--outer-bound-width), var(--gutter));\n}\n\n.inner-bound {\n  @include shapes.bound(var(--inner-bound-width), var(--gutter));\n  margin: 2rem auto;\n}\n\n.full-width {\n  @include shapes.full-width(var(--scrollbarWidth));\n}\n\n.list-style-none {\n\t@include shapes.list-style-none;\n}\n\nimg {\n\twidth: 100%;\n}\n\n.background {\n\tbackground-color: var(--background-color);\n\tcolor: var(--contrast-color);\n}\n","$box-color: #333 !default;\n$box-background: #fff !default;\n$box-padding: 1rem !default;\n$box-border-color: currentColor !default;\n$box-border-width: 2px !default;\n$box-border-radius: 4px !default;\n\n@mixin box(\n  $color: $box-color,\n  $background: $box-background,\n  $padding: $box-padding,\n  $border-color: $box-border-color,\n  $border-width: $box-border-width,\n  $border-radius: $box-border-radius,\n) {\n  /* ↓ Padding set to the first point on the modular scale */\n  padding: $padding;\n  border: $border-width $border-color solid;\n\n  /* ↓ Always apply the transparent outline, for high contrast mode */\n  outline: $border-width transparent;\n  outline-offset: calc(#{$border-width} * -1);\n\n  color: $color;\n  background-color: $background;\n  border-radius: $border-radius;\n\n  * {\n    /* ↓ Force colors to inherit from the parent\n  and honor inversion (below) */\n    color: inherit;\n  }\n}\n","@mixin icon($stroke: none, $vertical-align: -0.01em, $space: 0.5em) {\n\tdisplay: inline-block;\n\theight: 0.75em;\n\twidth: 0.75em;\n\t/* ↓ Override the em value with `1cap`  where `cap` is supported */  \n\theight: 1cap;\n\twidth: 1cap;\n\toverflow: visible;\n\tvertical-align: $vertical-align;\n\t\n\tsvg {\n\t\tfill: currentColor !important;\n\t\tstroke: $stroke;\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n}\n\n@mixin with-icon($space: 0.5em) {\n\t/* ↓ Set the `inline-flex` context,  which eliminates the word space */\n\tdisplay: inline-flex;\n\talign-items: center;\n  gap: var(--space, #{$space});\n}\n","@use \"settings\" as *;\n@use \"shapes\";\n\n@mixin padding {\n\tpadding: 0.25em 0.5em;\n}\n\na, button, input, select, textarea {\n\tfont: inherit;\n\tcursor: pointer;\n\t\n\t&:focus {\n\t\toutline: none;\n\t}\n}\n\ninput {\n\tbackground-color: var(--text-color);\n\tcolor: var(--background-color);\n\t@include shapes.type-setting(400);\n\t@include padding;\n}\n\n.icon-button {\n\t@include shapes.icon;\n\t@include shapes.button-reset;\n}\n\n.button {\n\t@include shapes.button;\n\tfont-weight: 600;\n}\n\n.alt-button {\n\t@include shapes.button(\n\t\t$background-color: var(--secondary-color),\n\t\t$border-color: var(--secondary-color),\n\t\t$color-hover: var(--secondary-color),\n\t\t$border-color-hover: var(--secondary-color)\n\t);\n\n\tfont-weight: 600;\n}\n\n.button-container a {\n\t@extend .button;\n}\n\n.alt-button-container a {\n\t@extend .alt-button;\n}\n\n// Link\n.body-text a {\n\tcolor: var(--primary-color);\n\tfont-weight: 600;\n\n\t&:hover, &:focus {\n\t\tcolor: var(--primary-color-500);\n\t}\n\n\t&:focus {\n\t\toutline: 2px solid var(--primary-color-500);\n\t\toutline-offset: 2px;\n\t}\n\n\t&:active {\n\t\tcolor: var(--primary-color-800);\n\t}\n}\n\n.skip-link {\n\t@include shapes.skip-link;\n}","@use \"settings\" as *;\n\n.main-header {\n\tposition: sticky;\n\ttop: 0;\n\tz-index: 100;\n\tpadding-left: 0;\n\tpadding-right: 0;\n\n\t&>div {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\n\ttransition: transform 350ms ease-in-out,\n\tbackground 350ms ease-in-out;\n}\n\n#home:focus {\n\tfilter: brightness(0.8);\n}\n\n.logo {\n\theight: calc(var(--header-height) - #{$gutter * 2});\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\tgap: var(--margin-200);\n\t\n\tsvg {\n\t\theight: 100%;\n\t\twidth: auto;\n\t}\n\t\n\tspan {\n\t\tdisplay: inline-block;\n\t\tfont: inherit;\n\t\tfont-size: calc(var(--header-height) - #{$gutter * 2});\n\t\tline-height: 1;\n\t\ttext-decoration: none;\n\t\tfont-weight: 900;\n\t}\n}\n\n.start {\n\t@if $collapsable-header {\n\t\t.main-header {\n\t\t\tposition: fixed;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\n\t\t\t--header-background: transparent;\n\n\t\t\tcolor: var(--text-color);\n\t\t\tbackground-color: var(--header-background);\n\t\t}\n\t}\n\n\t@if $start-dark-background {\n\t\t.main-header {\n\t\t\t--text-color: #{color(contrast)};\n\t\t}\n\n\t\t.main-content>.element-hero:first-of-type {\n\t\t\tcolor: var(--contrast-color);\n\t\t}\n\t}\n}\n\n.mobile-nav-is-open {\n\t.main-header {\n\t\t--header-background: #{color(background)};\n\t\t--text-color: #{color(contrast)};\n\t}\n}\n\n.has-scrolled-past-header {\n\t.main-header {\n\t\t--header-background: #{color(background)};\n\t\t--text-color: #{color(contrast)};\n\t}\n\n\t@if $collapsable-header {\n\t\t&.has-scrolled-down:not(.mobile-nav-is-open) {\n\t\t\t.main-header {\n\t\t\t\ttransform: translateY(-100%);\n\t\t\t}\n\t\t}\n\t}\n}","@use 'settings' as *;\n\n.main-footer {\n\tpadding-left: 0;\n\tpadding-right: 0;\n\tpadding-top: var(--margin-400);\n\tpadding-bottom: var(--margin-400);\n\n\t& > div {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: flex-end;\n\t\tflex-wrap: wrap;\n\t\tgap: var(--margin-400);\n\t}\n}\n","#cmt-content {\n\t.main-header {\n\t\tposition: static;\n\t}\n\n\t.cmt-object + .cmt-object {\n\t\tmargin-top: var(--margin-600);\n\t}\n\n\t.loading-screen {\n\t\tdisplay: none;\n\t}\n}\n\n","// Only use weight of margin, so we can do calculations on them\n@mixin element-margin($margin) {\n\t&.background {\n\t\tpadding-bottom: var(--margin-#{$margin});\n\n\t\t&+*:not(.background) {\n\t\t\tpadding-top: var(--margin-#{$margin});\n\t\t}\n\t\t\n\t\t&+.background { // gives all background elements the right spacing\n\t\t\tpadding-top: var(--margin-#{$margin});\n\t\t\tmargin-top: calc(var(--margin-#{$margin}) * -1) !important;\n\t\t}\n\t}\n\n\t&:not(.background) {\n\n\t\t&+*.background {\n\t\t\tmargin-top: var(--margin-#{$margin});\n\t\t\tpadding-top: var(--margin-#{$margin});\n\t\t}\n\n\t\t&+*:not(.background) {\n\t\t\tmargin-top: var(--margin-#{$margin});\n\t\t}\n\t}\n}\n\n// We don't want random margins in Layoutmode\nbody:not(.cmt-layout) {\n\t.element-margin {\n\t\t&--none+* {\n\t\t\tmargin-top: 0 !important;\n\t\t}\n\n\t\t&--small {\n\t\t\t@include element-margin(400);\n\t\t}\n\n\t\t&--default {\n\t\t\t@include element-margin(500);\n\t\t}\n\t\t\n\t\t&--medium {\n\t\t\t@include element-margin(600);\n\t\t}\n\t\t\n\t\t&--large {\n\t\t\t@include element-margin(800);\n\t\t}\n\t\t\n\t\t&--huge {\n\t\t\t@include element-margin(900);\n\t\t}\n\t}\n\t\n\n\t#main .element-margin--default { // using id to raise specificity\n\t\t&.element-headline+*[class~='element'] {\n\t\t\tpadding-top: var(--vertical-unit);\n\t\t\tmargin-top: 0;\n\t\t}\n\t\n\t\t&.element-paragraph+.element-paragraph {\n\t\t\tpadding-top: var(--vertical-unit);\n\t\t\tmargin-top: 0;\n\t\t}\n\t\t\n\t\t&.element-paragraph+.element-html {\n\t\t\tpadding-top: var(--vertical-unit);\n\t\t\tmargin-top: 0;\n\t\t}\n\n\t\t&:not(.background) + .footer-margin {\n\t\t\tmargin-top: var(--margin-800);\n\t\t}\n\n\t\t&.background + .footer-margin {\n\t\t\tpadding-top: 0;\n\t\t\tmargin-top: 0;\n\t\t}\n\t}\n}\n\n.footer-margin {\n\topacity: 0;\n\theight: 0;\n\tbackground-color: none;\n\tborder: none;\n}\n\n// fallback for Pageless Actions or other\n*:not(.element)+.footer-margin {\n\tmargin-top: var(--margin-800);\n}","@use 'shapes' as *;\n\n@mixin cover {\n\timg, video {\n\t\tobject-fit: cover;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t}\n}\n\n.element-size {\n\t&--fill-screen {\n\t\theight: var(--screen-height);\n\t\t@include cover;\n\t}\n\t\n\t&--half-screen {\n\t\theight: calc(var(--screen-height) / 2);\n\t\t@include cover;\n\t}\n\t\n\t&--third-screen {\n\t\theight: calc(var(--screen-height) / 3);\n\t\t@include cover;\n\t}\n\t\n\t&--two-third-screen {\n\t\theight: calc((var(--screen-height) / 3) * 2);\n\t\t@include cover;\n\t}\n\t\n\t&--16x9 {\n\t\t@include for-size(tablet-landscape-up) {\n\t\t\taspect-ratio: 16 / 9;\n\t\t\tpadding: 0;\n\t\t}\n\t\t@include cover;\n\t}\n\t\n\t&--4x3 {\n\t\t@include for-size(tablet-landscape-up) {\n\t\t\taspect-ratio: 4 / 3;\n\t\t\tpadding: 0;\n\t\t}\n\t\t@include cover;\n\t}\n\t\n\t&--1x1 {\n\t\t@include for-size(tablet-landscape-up) {\n\t\t\taspect-ratio: 1 / 1;\n\t\t\tpadding: 0;\n\t\t}\n\t\t@include cover;\n\t}\n}","$size: 120px;\n$padding: 1rem;\n$color: var(--primary-color);\n\n$loader: 'spinner' !default;\n$background-color: var(--background-color-600) !default;\n\nbody:not(.cmt-layout) .loading-screen {\n\tposition: fixed;\n\tz-index: 800;\n\tinset: 0;\n\tbackground: $background-color;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\ttransition: transform 500ms ease-in-out;\n}\n\n.page-has-loaded .loading-screen {\n\topacity: 0;\n\tpointer-events: none;\n\n\t&__animation {\n\t\tanimation-play-state: paused;\n\t}\n}\n\nbody.is-loading .loading-screen {\n\topacity: 1;\n\tpointer-events: all;\n\n\t&__animation {\n\t\tanimation-play-state: running;\n\t}\n}\n\n\n// Diverent loader types\n// For more information on loader types, see:\n// https: //css-tricks.com/single-element-loaders-the-spinner/\n\n@mixin loading-spinner {\n\twidth: $size;\n\tpadding: $padding;\n\tbackground: $color;\n\n\taspect-ratio: 1;\n\tborder-radius: 50%;\n\t--_m:\n\t\tconic-gradient(#0000, #000),\n\t\tlinear-gradient(#000 0 0) content-box;\n\t-webkit-mask: var(--_m);\n\tmask: var(--_m);\n\t-webkit-mask-composite: source-out;\n\tmask-composite: subtract;\n\tbox-sizing: border-box;\n\tanimation: load-spinner 1s linear infinite;\n}\n\n@keyframes load-spinner {\n\tto {\n\t\ttransform: rotate(1turn)\n\t}\n}\n\n@mixin loading-dots {\n\n\t&,\n\t&:before,\n\t&:after {\n\t\twidth: $size * 0.3;\n\t\t/* update this to control the size */\n\t\taspect-ratio: .5;\n\t\tdisplay: grid;\n\t\tbackground: radial-gradient($color 68%, #0000 72%) center/100% 50% no-repeat;\n\t\tanimation: load-dots 1.2s infinite linear calc(var(--_s, 0)*.4s);\n\t\ttransform: translate(calc(var(--_s, 0)*150%));\n\t}\n\n\t&:before,\n\t&:after {\n\t\tcontent: \"\";\n\t\tgrid-area: 1/1;\n\t}\n\n\t&:before {\n\t\t--_s: -1\n\t}\n\n\t&:after {\n\t\t--_s: 1\n\t}\n}\n\n@keyframes load-dots {\n\t20% {\n\t\tbackground-position: top\n\t}\n\n\t40% {\n\t\tbackground-position: bottom\n\t}\n\n\t60% {\n\t\tbackground-position: center\n\t}\n}\n\n@mixin loading-bars {\n\twidth: $size;\n\taspect-ratio: 1;\n\t--c: no-repeat linear-gradient(#{$color}, #{$color});\n\tbackground:\n\t\tvar(--c) 0% 50%,\n\t\tvar(--c) 50% 50%,\n\t\tvar(--c) 100% 50%;\n\tbackground-size: 20% 100%;\n\tanimation: load-bars 1s infinite linear;\n}\n\n@keyframes load-bars {\n\t0% {\n\t\tbackground-size: 20% 100%, 20% 100%, 20% 100%\n\t}\n\n\t33% {\n\t\tbackground-size: 20% 10%, 20% 100%, 20% 100%\n\t}\n\n\t50% {\n\t\tbackground-size: 20% 100%, 20% 10%, 20% 100%\n\t}\n\n\t66% {\n\t\tbackground-size: 20% 100%, 20% 100%, 20% 10%\n\t}\n\n\t100% {\n\t\tbackground-size: 20% 100%, 20% 100%, 20% 100%\n\t}\n}\n\n.loading-screen__animation {\n\t@if $loader ==\"spinner\" {\n\t\t@include loading-spinner;\n\t}\n\n\t@else if $loader ==\"dots\" {\n\t\t@include loading-dots;\n\t}\n\n\t@else if $loader ==\"bars\" {\n\t\t@include loading-bars;\n\t}\n}","@use 'settings';\n\n// Edit as needed\n@forward '../shapes/layout-options/element-margin';\n@forward '../shapes/layout-options/element-size';\n\n@forward '../shapes/components/loading-screen' with (\n\t$loader: settings.$loader,\n\t$background-color: var(--contrast-color-600),\n);\n\n@forward '../shapes/components/nav';\n@forward '../shapes/components/overlay';\n@forward '../shapes/components/flash-message';\n@forward '../shapes/components/hero';\n@forward '../shapes/components/media-object';\n@forward '../shapes/components/quote';\n@forward '../shapes/components/slider';\n@forward '../shapes/components/tile';\n@forward '../shapes/components/expander';\n@forward '../shapes/components/card';\n@forward '../shapes/components/light-box';\n@forward '../shapes/components/map';\n\n// Add as needed","@use \"settings\" as *;\n@use 'shapes' as *;\n\n.nav {\n\t&__list {\n\t\t@include list-style-none;\n\t\tdisplay: flex;\n\t\tgap: $gutter * 2;\n\t}\n}\n\n.nav--menu {\n\tborder: none;\n\tcolor: inherit;\n\talign-items: center;\n\tjustify-content: center;\n\tplace-self: center;\n\tplace-content: center;\n\tplace-items: center;\n\tbackground: none;\n\tdisplay: grid;\n\tplace-items: center;\n\theight: auto;\n\twidth: auto;\n\tmax-height: min-content;\n\n\n\tsvg {\n\t\twidth: calc(var(--header-height) - (var(--gutter) * 3));\n\t\theight: calc(var(--header-height) - (var(--gutter) * 3));\n\t\tfill: currentColor;\n\t}\n\n\t.cross,\n\t.bars {\n\t\tgrid-column: 1 / 1;\n\t\tgrid-row: 1 / 1;\n\t\tline-height: 0; // wiered behavior if not set\n\t\ttransition: opacity 200ms ease-in-out;\n\t}\n\n\t.cross {\n\t\topacity: 0;\n\t}\n\n\t&[aria-expanded=\"true\"] {\n\t\t.cross {\n\t\t\topacity: 1;\n\t\t}\n\n\t\t.bars {\n\t\t\topacity: 0;\n\t\t}\n\t}\n}\n\n.subnav {\n\tdisplay: none;\n}\n\n[aria-expanded=\"true\"]+.subnav {\n\tdisplay: flex;\n}\n\n\n/////////////////////\n/// Mobile Styles ///\n/////////////////////\n\n@mixin folding-nav {\n\t#main-nav {\n\t\t&.nav {\n\t\t\tposition: fixed;\n\t\t\tright: 0;\n\t\t\ttop: var(--header-height);\n\t\t\tbottom: 0;\n\n\t\t\tdisplay: flex;\n\t\t\tflex-flow: column;\n\n\t\t\tjustify-content: space-between;\n\t\t\tpadding: $gutter * 2 $gutter;\n\t\t\ttext-align: right;\n\n\t\t\tbackground-color: var(--background-color);\n\t\t\tbox-shadow: -$gutter 0 $gutter $gutter * -0.5 rgba(0, 0, 0, 0.2);\n\n\t\t\toverflow-y: auto;\n\n\t\t\t&:not(.nav--open) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\n\t\t.nav__list {\n\t\t\t@include type-setting(600);\n\t\t\tflex-flow: column;\n\t\t\tmargin: auto;\n\t\t}\n\n\t\t.subnav {\n\t\t\tmargin: $gutter 0;\n\t\t\tpadding: $gutter;\n\t\t\twidth: calc(100% + #{$gutter * 2});\n\t\t\ttransform: translateX(-1 * $gutter);\n\t\t}\n\t}\n}\n\n\n//////////////////////\n/// Desktop Styles ///\n//////////////////////\n\n@mixin header-nav {\n\t.nav {\n\t\tposition: relative;\n\n\t\t&__list {\n\t\t\talign-items: center;\n\t\t}\n\t}\n\n\t.nav--menu {\n\t\tdisplay: none;\n\t}\n\n\t.mobile-nav__footer,\n\t.mobile-nav__header {\n\t\tdisplay: none;\n\t}\n\n\t.subnav {\n\t\tposition: absolute;\n\t\tbottom: $gutter * -2;\n\t\ttransform: translate(-$gutter, 100%);\n\t\tflex-flow: column;\n\t\tjustify-content: stretch;\n\t\talign-items: stretch;\n\t\tpadding: $gutter * 0.5 0;\n\t\tgap: 0;\n\t\tborder-radius: var(--border-radius);\n\n\t\t.nav__item {\n\t\t\twidth: 100%;\n\t\t\tpadding: $gutter * 0.5 $gutter;\n\n\t\t\ta {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n@if $nav-style ==\"folding\" {\n\t@include folding-nav;\n\n\t#main-nav.nav {\n\t\twidth: 100%;\n\t\ttext-align: center\n\t}\n}\n\n@else {\n\t@include for-size(tablet-landscape-down) {\n\t\t@include folding-nav;\n\n\t\t#main-nav.nav {\n\t\t\tmin-width: max-content;\n\t\t\twidth: max(40%, 16rem);\n\t\t\tmax-width: 100%;\n\t\t}\n\t}\n\n\t@include for-size(tablet-landscape-up) {\n\t\t@include header-nav;\n\t}\n\n\t@include for-size(phone) {\n\t\t#main-nav.nav {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n}","@use \"settings\" as *;\n@use 'shapes' as *;\n\n.overlay {\n  position: fixed;\n  inset: 0;\n  z-index: 1000;\n  \n  display: grid;\n\n  place-content: center;\n  place-items: center;\n\n  padding: $gutter;\n  background-color: rgba(#000, 0.6);\n\tcolor: var(--contrast-color);\n\n\tpointer-events: none;\n\tvisibility: hidden;\n\t\n\topacity: 0;\n\ttransition: opacity 500ms ease-in-out;\n\t\n\t&__wrapper {\n\t\tmax-width: var(--outer-bound-width);\n\t\t\n\t\t> *:not(.overlay--target) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t&--open {\n\t\tvisibility: visible;\n\t\tpointer-events: all;\n\t\topacity: 1;\n\t}\n\t\n\t&__close {\n\t\tcursor: pointer;\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\tz-index: 1000; // above all else\n\t\tbackground: none;\n\t\tborder: none;\n\t\t@include type-setting(900);\n\t\tmargin: 0;\n\t\tright: calc(var(--outer-bound));\n\t\ttop: calc(var(--outer-bound));\n\t\tcolor: inherit;\n\t\t\n\t\tsvg {\n\t\t\tdisplay: block;\n\t\t\theight: 1em;\n\t\t\twidth: 1em;\n\t\t\tfill: currentColor;\n\t\t}\n\t}\n}\n","@use \"settings\" as *;\n@use \"shapes\";\n\n\n$info-color: skyblue;\n$success-color: green;\n$warning-color: yellow;\n$error-color: red;\n\n.flash-messages {\n  position: fixed;\n  top: 0;\n  z-index: 10;\n  inset: auto 0;\n\n  font-weight: 800;\n\n  margin-bottom: -$gutter;\n  // transform: translateY(-100%);\n\t\n  & + * {\n\t\tmargin-top: 0;\n  }\n\t\n  .message {\n\t\tcolor: var(--text-color);\n    background-color: $info-color;\n\t\ttransition: 350ms ease-out;\n\t\ttransition-property: max-height, opacity;\n\t\tmax-height: 4rem;\n\t\toverflow: hidden;\n\t\t\n    .icon {\n\t\t\tfont-size: 2rem;\n    }\n\t\t\n    &__wrapper {\n\t\t\tdisplay: flex;\n      width: 100%;\n      justify-content: space-between;\n\t\t\tpadding: $gutter;\n    }\n\t\t\n    &__dismiss {\n\t\t\t@include shapes.type-setting(800);\n    }\n\t\t\n    &--error {\n      color: var(--background-color);\n      background-color: $error-color;\n    }\n\n    &--warning {\n      color: var(--text-color);\n      background-color: $warning-color;\n    }\n\n    &--success {\n      color: var(--background-color);\n      background-color: $success-color;\n    }\n\n\t\t&--dismissed {\n\t\t\tpointer-events: none;\n\t\t\tmax-height: 0;\n\t\t}\n  }\n}\n","@use \"settings\" as *;\n@use 'shapes';\n\n.hero {\n\tposition: relative;\n\t// height: calc(var(--screen-height));\n\t// height: calc(var(--screen-height) - var(--header-height));\n\toverflow: hidden;\n\t\n\t&__background {\n\t\tposition: absolute;\n\t\tinset: 0;\n\t}\n\t\n\t&__foreground {\n\t\tdisplay: flex;\n\t\tflex-flow: column;\n\t\t\n\t\theight: 100%;\n\t}\n\t\n\timg {\n\t\tobject-position: center;\n\t\tobject-fit: cover;\n\t\theight: 100%;\n\t}\n\t\n\t&__caption {\n\t\tz-index: 1;\n\t\tmargin-top: auto;\n\t\tmargin-bottom: auto;\n\t\tpadding-top: var(--margin-600);\n\t\tpadding-bottom: var(--margin-600);\n\t\t\n\t\t@include shapes.for-size(tablet-landscape-up) {\n\t\t\twidth: 50%;\n\t\t\tmargin: auto auto auto 12.5%;\n\t\t}\n\t\t\n\t\t@include shapes.for-size(desktop-up) {\n\t\t\twidth: 64ch;\n\t\t}\n\t}\n}\n","@use \"settings\" as *;\n@use \"shapes\";\n\n.media-object {\n  @include shapes.media-object($gutter * 2);\n\n\t@include shapes.for-size(tablet-landscape-down) {\n\t\tflex-flow: column;\n\t\tgap: $gutter;\n\t}\n\t\n\t&--inverted {\n\t\t@include shapes.for-size(tablet-landscape-up) {\n\t\t\tflex-direction: row-reverse;\n\t\t}\n\t}\n\n\t&__image {\n\t\t&--fill-height {\n\t\t\talign-self: stretch;\n\t\t\twidth: auto;\n\t\t\theight: auto;\n\n\t\t\timg, video  {\n\t\t\t\theight: 100%;\n\t\t\t\tobject-fit: cover;\n\t\t\t\tobject-position: center;\n\t\t\t}\n\t\t}\n\t\t\n\t\t&--fill-screen {\n\t\t\timg, video {\n\t\t\t\theight: var(--screen-height);\n\t\t\t\tobject-fit: cover;\n\t\t\t\tobject-position: center;\n\t\t\t}\n\t\t}\n\t}\n}\n\n@if $full-width-fix {\n\t.full-width {\n\t\t&.media-object .body-text > * {\n\t\t\tmax-width: calc(var(--outer-bound-width) / 2);\n\t\t\tpadding-right: $gutter;\n\t\t}\n\n\t\t&.media-object--inverted .body-text > * {\n\t\t\tpadding-left: $gutter;\n\t\t\tpadding-right: 0;\n\n\t\t\t@include shapes.for-size(tablet-landscape-up) {\n\t\t\t\tmargin-left: auto;\n\t\t\t}\n\t\t}\n\t}\n}","@use 'shapes' as *;\n\n.quote {\n\tdisplay: flex;\n\tflex-flow: column;\n\ttext-align: center;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding-top: var(--margin-800);\n\tpadding-bottom: var(--margin-800);\n\n\t&[style*=custom-background] {\n\t\tbackground-image: var(--custom-background);\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\tcolor: var(--contrast-color);\n\t}\n\n\t&__block {\n\t\tmargin-bottom: 0;\n\t\t@include type-setting(800);\n\t\tfont-weight: 600;\n\n\t\t@include for-size(tablet-portrait-up) {\n\t\t\tword-break: keep-all;\n\t\t}\n\t}\n\n\t&__author {\n\t\t@include type-setting(600);\n\t\tfont-weight: 800;\n\t}\n\n\t&__figure,\n\t&__figcaption {\n\t\tpadding: 0 var(--gutter);\n\t}\n\n\t&>*+* {\n\t\tmargin-top: var(--margin-400);\n\t}\n}\n","@use \"shapes\";\n\n.splide {\n\t&__track, &__list, &__slide, & figure {\n\t\theight: 100%;\n\t}\n\n\timg {\n\t\theight: 100%;\n\t\tobject-fit: cover;\n\t\tobject-position: center;\n\t}\n\n\tul {\n\t\t@include shapes.list-style-none;\n\t}\n}\n\n.slide {\n\t&__figure {\n\t\tposition: relative;\n\t}\n\n\t&__caption {\n\t\tposition: absolute;\n\t\tbottom: var(--margin-400);\n\t\tleft: var(--margin-300);\n\t\tright: var(--margin-300);\n\n\t\t@include shapes.type-setting(800);\n\t\tfont-weight: 600;\n\t\tcolor: var(--background-color);\n\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\tmax-width: 100%;\n\t}\n}","\n@use \"shapes\" as *;\n\n.tiles {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\tgap: var(--margin-300);\n}\n\n.tile {\n\tposition: relative;\n\n\timg {\n\t\theight: 100%;\n\t\tobject-fit: cover;\n\t\tobject-position: center;\n\t}\n\n\t&__caption {\n\t\tposition: absolute;\n\t\tbottom: var(--margin-200);\n\t\tleft: var(--margin-300);\n\t\tright: var(--margin-300);\n\n\t\t@include type-setting(600);\n\t\tfont-weight: 600;\n\t\tcolor: var(--background-color);\n\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\tmax-width: 100%;\n\t}\n}",".expander {\n\t.body-text {\n\t\tmargin-top: var(--margin-300);\n\t}\n}",".cards {\n\tdisplay: flex;\n\tflex-flow: row;\n\tgap: var(--margin-400);\n}\n\n.card {\n\tflex: 1 1 0;\n}","@use 'shapes' as *;\n\n.light-box {\n\toverflow: hidden;\n\n\tfigure {\n\t\theight: calc(100%);\n\t\twidth: 100%;\n\t}\n\n\timg,\n\tvideo {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tobject-fit: contain;\n\t\tobject-position: center;\n\t\tmax-height: 80vh;\n\t}\n\n\tfigure {\n\t\ttransition: 500ms ease-out;\n\t\ttransform-origin: center;\n\t\topacity: 0;\n\t\ttransform: translateY(-10%);\n\t}\n\n\t&--active {\n\t\tz-index: 10;\n\t\topacity: 1;\n\n\t\tfigure {\n\t\t\topacity: 1;\n\t\t\ttransform: translateY(0);\n\t\t}\n\t}\n}\n\n.light-box__controlls {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\t@include type-setting(600);\n\tfont-variant-numeric: tabular-nums;\n\n\tbutton {\n\t\tcursor: pointer;\n\t\tdisplay: block;\n\t\tborder: none;\n\t\tbackground: none;\n\t\tcolor: inherit;\n\t}\n\t\n\tsvg {\n\t\tdisplay: block;\n\t\theight: 2em;\n\t\twidth: 2em;\n\t\tfill: currentColor;\n\t}\n\n\t.light-box--total::after {\n\t\tcontent: \" | \";\n\t}\n}",".map {\n\t.mapboxgl-marker {\n\t\tsvg path {\n\t\t\tfill: var(--primary-color, blue) !important;\n\t\t}\n\t}\n}","/**\n * main.scss\n */\n\n// change to path if needed\n@forward \"shapes/lib/reset\";\n\n@forward \"partials\";\n\n@forward \"components\";"]}