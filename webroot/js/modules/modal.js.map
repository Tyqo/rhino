{"version":3,"names":[],"mappings":"","sources":["modal.js"],"sourcesContent":["export default class Modal {\n\n\tconstructor(main) {\n\t\tthis.main = main;\n\n\t\tif (this.main.debug) {\n\t\t\tconsole.debug(\"Modal::const\");\n\t\t}\n\n\t\tthis.Conf = {\n\t\t\tisOpenClass: \"modal-is-open\",\n\t\t\topeningClass: \"modal-is-opening\",\n\t\t\tclosingClass: \"modal-is-closing\",\n\t\t\tanimationDuration: 400\n\t\t};\n\n\t\tthis.visibleModal = null;\n\n\t\tthis.buttons = document.querySelectorAll('[data-target]');\n\t\tif (this.buttons.length > 0) {\n\t\t\tthis.init();\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.buttons.forEach(button => {\n\t\t\tlet target = document.getElementById(button.dataset.target);\n\t\t\tthis.initButton(button, target);\t\t\n\t\t});\n\t}\n\n\tinitButton(button, target) {\n\t\tif (target == null) {\n\t\t\tlet modal = this.newModal(button);\n\t\t\tthis.addContent(modal, button.dataset.modal);\n\t\t\tthis.addQuery(modal);\n\t\t\tmodal.addEventListener('confirm', () => {\n\t\t\t\tlet form = modal.querySelector('form');\n\t\t\t\tif (form) {\n\t\t\t\t\tform.submit();\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (target.tagName == 'DIALOG') {\n\t\t\tbutton.addEventListener('click', (event) => {\n\t\t\t\tif (button.ariaLabel == 'Close') {\n\t\t\t\t\tlet event = new Event('cancel');\n\t\t\t\t\ttarget.dispatchEvent(event);\n\t\t\t\t}\n\t\t\t\tthis.toggleModal(event, target);\n\t\t\t});\n\t\t} else if (target.tagName == 'FORM') {\n\t\t\tlet modal = this.newModal(button);\n\t\t\tthis.addContent(modal, button.dataset.modal);\n\t\t\tthis.addQuery(modal);\n\t\t\tmodal.addEventListener('confirm', () => {\n\t\t\t\ttarget.submit();\t\t\t\t\n\t\t\t});\n\t\t}\n\t}\n\n\ttoggleModal(event, target) {\n\t\tevent.preventDefault();\n\t\tif (this.isModalOpen(target)) {\n\t\t\tthis.closeModal(target);\n\t\t} else {\n\t\t\tthis.openModal(target);\n\t\t}\n\t}\n\n\tisModalOpen(modal) {\n\t\treturn !(!modal.hasAttribute(\"open\") || \"false\" == modal.getAttribute(\"open\"));\n\t}\n\n\topenModal(modal) {\n\t\tthis.visibleModal = modal;\n\n\t\tlet event = new CustomEvent(\"open\", {\n\t\t\tdetail: this.button,\n\t\t});\n\t\tmodal.dispatchEvent(event);\n\n\t\tmodal.showModal();\n\t}\n\n\tcloseModal(modal) {\n\t\tthis.visibleModal = null;\n\n\t\tmodal.close();\n\t}\n\n\tnewModal(button, openOnclick = true) {\n\t\tlet target = button.dataset.target;\n\t\tif (target == null) {\n\t\t\ttarget = button.name;\n\t\t\tbutton.dataset.target = target;\n\t\t}\n\n\t\tlet modal = document.createElement('dialog');\n\t\tlet modalInner = document.createElement('article');\n\t\tlet modalMain = document.createElement('main');\n\t\tlet closeButton = document.createElement('button');\n\n\t\tmodal.id = target;\n\n\t\tcloseButton.classList.add('close', 'button', 'outline', 'contrast');\n\t\tcloseButton.ariaLabel = 'Close';\n\t\tcloseButton.dataset.target = target;\n\n\t\tmodalInner.appendChild(closeButton);\n\t\tmodalInner.appendChild(modalMain);\n\t\tmodal.appendChild(modalInner);\n\t\tdocument.body.appendChild(modal);\n\t\t\n\t\tthis.initButton(closeButton, modal);\n\n\t\tif (openOnclick) {\n\t\t\tthis.initButton(button, modal);\n\t\t}\n\n\t\treturn modal;\n\t}\n\n\taddContent(modal, content) {\n\t\tmodal.querySelector('main').innerHTML = content;\n\t}\n\n\taddQuery(modal, conf = {cancel: true, confirm: true}) {\n\t\tlet modalInner = modal.querySelector('article');\n\t\tlet container = document.createElement('footer');\n\t\t\n\t\tif (conf.cancel) {\n\t\t\tlet cancel = document.createElement('button');\n\t\t\tcancel.innerText = 'cancel';\n\t\t\tcancel.classList.add('contrast');\n\t\t\tcontainer.appendChild(cancel);\n\t\t\tcancel.addEventListener('click', () => {\n\t\t\t\tlet event = new Event('cancel');\n\t\t\t\tmodal.dispatchEvent(event);\n\t\t\t\tthis.closeModal(modal);\n\t\t\t});\n\t\t}\n\n\t\tif (conf.confirm) {\n\t\t\tlet confirm = document.createElement('button');\n\t\t\tconfirm.innerText = 'confirm';\n\t\t\tcontainer.appendChild(confirm);\n\t\t\tconfirm.addEventListener('click', () => {\n\t\t\t\tlet event = new Event('confirm');\n\t\t\t\tmodal.dispatchEvent(event);\n\t\t\t\tthis.closeModal(modal);\n\t\t\t});\n\t\t}\n\t\t\n\t\tmodalInner.appendChild(container);\n\t}\n\n\treset(modal) {\n\t\tthis.addContent(modal, '');\n\t}\n}"],"file":"modal.js"}