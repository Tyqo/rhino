{"version":3,"names":[],"mappings":"","sources":["hooks-handler.js"],"sourcesContent":["export default class HooksHandler {\n\tconstructor(main) {\n\t\tthis.main = main;\n\n\t\tif (this.main.debug) {\n\t\t\tconsole.debug(\"HooksHandler::const\");\n\t\t}\n\n\t\t// (A1) CURRENT HOOK QUEUE\n\t\tthis.queue = {};\n\t}\n\n\t// (A2) ADD FUNCTION TO QUEUE\n\t// name : name of function to add hook to\n\t// fn : function to call\n\tadd(name, fn) {\n\t\tif (!this.queue[name]) { this.queue[name] = []; }\n\t\tthis.queue[name].push(fn);\n\t}\n\n\t// (A3) CALL A HOOK\n\t// name : name of function to add hook to\n\t// params : parameters\n\tcall(name, ...params) {\n\t\tconsole.log(name);\n\t\tif (this.queue[name]) {\n\t\t\tthis.queue[name].forEach((fn) => { fn(...params); });\n\t\t\tdelete this.queue[name];\n\t\t}\n\t}\n}"],"file":"hooks-handler.js"}