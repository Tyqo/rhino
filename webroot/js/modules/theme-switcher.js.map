{"version":3,"names":[],"mappings":"","sources":["theme-switcher.js"],"sourcesContent":["export default class ThemeSwitcher {\n\tconstructor(main) {\n\t\tthis.main = main;\n\n\t\tif (this.main.debug) {\n\t\t\tconsole.debug(\"ThemeSwitcher::const\");\n\t\t}\n\n\t\t// Config\n\t\tthis.Config = {\n\t\t\t_scheme: \"auto\",\n\t\t\tmenuTarget: \"details[role='list']\",\n\t\t\tbuttonsTarget: \"a[data-theme-switcher]\",\n\t\t\tbuttonAttribute: \"data-theme-switcher\",\n\t\t\trootAttribute: \"data-theme\",\n\t\t\tlocalStorageKey: \"picoPreferredColorScheme\",\n\t\t}\n\n\t\tthis.scheme = this.schemeFromLocalStorage;\n\t}\n\n\t// Init\n\tinit() {\n\t\tthis.initSwitchers();\n\t}\n\n\t// Get color scheme from local storage\n\tget schemeFromLocalStorage() {\t\n\t\tif (typeof window.localStorage !== \"undefined\") {\n\t\t\tif (window.localStorage.getItem(this.Config.localStorageKey) !== null) {\n\t\t\t\treturn window.localStorage.getItem(this.Config.localStorageKey);\n\t\t\t}\n\t\t}\n\n\t\treturn this.Config._scheme;\n\t}\n\n\t// Preferred color scheme\n\tget preferredColorScheme() {\n\t\treturn window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n\t}\n\n\t// Init switchers\n\tinitSwitchers() {\n\t\tthis.buttons = document.querySelectorAll(this.Config.buttonsTarget);\n\t\tthis.buttons.forEach((button) => {\n\t\t\tbutton.addEventListener(\n\t\t\t\t\"click\",\n\t\t\t\t(event) => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t// Set scheme\n\t\t\t\t\tthis.scheme = button.getAttribute(this.Config.buttonAttribute);\n\t\t\t\t\t// Close dropdown\n\t\t\t\t\tdocument.querySelector(this.Config.menuTarget).removeAttribute(\"open\");\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\t\t});\n\t}\n\n\t// Set scheme\n\tset scheme(scheme) {\n\t\tif (scheme == \"auto\") {\n\t\t\tthis.preferredColorScheme == \"dark\" ? (this.Config._scheme = \"dark\") : (this.Config._scheme = \"light\");\n\t\t} else if (scheme == \"dark\" || scheme == \"light\") {\n\t\t\tthis.Config._scheme = scheme;\n\t\t}\n\t\tthis.applyScheme();\n\t\tthis.schemeToLocalStorage();\n\t}\n\n\t// Get scheme\n\tget scheme() {\n\t\treturn this.Config._scheme;\n\t}\n\n\t// Apply scheme\n\tapplyScheme() {\n\t\tdocument.querySelector(\"html\").setAttribute(this.Config.rootAttribute, this.scheme);\n\t}\n\n\t// Store scheme to local storage\n\tschemeToLocalStorage() {\n\t\tif (typeof window.localStorage !== \"undefined\") {\n\t\t\twindow.localStorage.setItem(this.Config.localStorageKey, this.scheme);\n\t\t}\n\t}\n};\n\n// Init\n"],"file":"theme-switcher.js"}